{
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "App"
        ]
      }
    },
    "/health": {
      "get": {
        "operationId": "AppController_getHealth",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "App"
        ]
      }
    },
    "/health/db": {
      "get": {
        "operationId": "AppController_getDatabaseHealth",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "App"
        ]
      }
    },
    "/health/redis": {
      "get": {
        "operationId": "AppController_getRedisHealth",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "App"
        ]
      }
    },
    "/profile": {
      "get": {
        "operationId": "AppController_getProfile",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "tags": [
          "App"
        ]
      }
    },
    "/admin-only": {
      "get": {
        "operationId": "AppController_getAdminData",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "tags": [
          "App"
        ]
      }
    },
    "/manager-data": {
      "get": {
        "operationId": "AppController_getManagerData",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "tags": [
          "App"
        ]
      }
    },
    "/all-users": {
      "get": {
        "operationId": "AppController_getAllUsersData",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "tags": [
          "App"
        ]
      }
    },
    "/auth/me": {
      "get": {
        "operationId": "AuthController_getProfile",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Thông tin user"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Lấy thông tin user hiện tại",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [
          {
            "name": "x-forwarded-for",
            "required": false,
            "in": "header",
            "description": "Client IP address (optional)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user-agent",
            "required": false,
            "in": "header",
            "description": "User agent string (optional)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Đăng nhập thành công"
          },
          "401": {
            "description": "Thông tin đăng nhập không đúng"
          },
          "429": {
            "description": "Quá nhiều lần thử đăng nhập"
          }
        },
        "summary": "Đăng nhập",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/logout": {
      "post": {
        "operationId": "AuthController_logout",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Đăng xuất thành công"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Đăng xuất",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/register": {
      "post": {
        "operationId": "AuthController_register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Đăng ký thành công"
          },
          "400": {
            "description": "Dữ liệu không hợp lệ"
          }
        },
        "summary": "Đăng ký tài khoản mới",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/forgot-password": {
      "post": {
        "operationId": "AuthController_forgotPassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token reset đã được gửi"
          },
          "404": {
            "description": "Email không tồn tại"
          }
        },
        "summary": "Quên mật khẩu",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/reset-password": {
      "post": {
        "operationId": "AuthController_resetPassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reset mật khẩu thành công"
          },
          "400": {
            "description": "Token không hợp lệ"
          }
        },
        "summary": "Reset mật khẩu",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/refresh-token": {
      "post": {
        "operationId": "AuthController_refreshToken",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cấp lại access token thành công"
          },
          "401": {
            "description": "Refresh token không hợp lệ"
          }
        },
        "summary": "Làm mới access token từ refresh token",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/users": {
      "post": {
        "operationId": "UsersController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tạo user thành công",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Dữ liệu không hợp lệ"
          },
          "403": {
            "description": "Không có quyền tạo user"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Tạo user mới",
        "tags": [
          "Users"
        ]
      },
      "get": {
        "operationId": "UsersController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Danh sách users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponseDto"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền xem danh sách"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Lấy danh sách users",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "UsersController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Thông tin user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền xem user"
          },
          "404": {
            "description": "User không tồn tại"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Lấy thông tin user theo ID",
        "tags": [
          "Users"
        ]
      },
      "patch": {
        "operationId": "UsersController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cập nhật thành công",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền cập nhật"
          },
          "404": {
            "description": "User không tồn tại"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Cập nhật user",
        "tags": [
          "Users"
        ]
      },
      "delete": {
        "operationId": "UsersController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Xóa thành công"
          },
          "403": {
            "description": "Không có quyền xóa"
          },
          "404": {
            "description": "User không tồn tại"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Xóa user",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{id}/restore": {
      "patch": {
        "operationId": "UsersController_restore",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Khôi phục thành công"
          },
          "403": {
            "description": "Không có quyền khôi phục"
          },
          "404": {
            "description": "User không tồn tại hoặc chưa bị xóa mềm"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Khôi phục user đã xóa mềm",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/store/{storeId}": {
      "get": {
        "operationId": "UsersController_findByStore",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Danh sách users của store",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponseDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Lấy users theo store",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/role/{role}": {
      "get": {
        "operationId": "UsersController_findByRole",
        "parameters": [
          {
            "name": "role",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Danh sách users theo role",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponseDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Lấy users theo role",
        "tags": [
          "Users"
        ]
      }
    },
    "/tenant/stores": {
      "post": {
        "operationId": "StoresController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStoreDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tạo cửa hàng thành công",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Dữ liệu không hợp lệ"
          },
          "403": {
            "description": "Không có quyền tạo cửa hàng"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Tạo cửa hàng mới",
        "tags": [
          "Stores"
        ]
      },
      "get": {
        "operationId": "StoresController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Danh sách cửa hàng",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoreResponseDto"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền xem danh sách"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Lấy danh sách cửa hàng",
        "tags": [
          "Stores"
        ]
      }
    },
    "/tenant/stores/{id}": {
      "get": {
        "operationId": "StoresController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Thông tin cửa hàng",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền xem cửa hàng"
          },
          "404": {
            "description": "Cửa hàng không tồn tại"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Lấy thông tin cửa hàng theo ID",
        "tags": [
          "Stores"
        ]
      },
      "patch": {
        "operationId": "StoresController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStoreDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cập nhật thành công",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền cập nhật"
          },
          "404": {
            "description": "Cửa hàng không tồn tại"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Cập nhật cửa hàng",
        "tags": [
          "Stores"
        ]
      },
      "delete": {
        "operationId": "StoresController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Xóa thành công"
          },
          "403": {
            "description": "Không có quyền xóa"
          },
          "404": {
            "description": "Cửa hàng không tồn tại"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Xóa cửa hàng",
        "tags": [
          "Stores"
        ]
      }
    },
    "/tenant/stores/{id}/restore": {
      "patch": {
        "operationId": "StoresController_restore",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Khôi phục thành công"
          },
          "403": {
            "description": "Không có quyền khôi phục"
          },
          "404": {
            "description": "Cửa hàng không tồn tại hoặc chưa bị xóa mềm"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Khôi phục cửa hàng đã xóa mềm",
        "tags": [
          "Stores"
        ]
      }
    },
    "/tenant/stores/user/{userId}": {
      "get": {
        "operationId": "StoresController_findByUser",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Danh sách cửa hàng của user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoreResponseDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Lấy cửa hàng theo user",
        "tags": [
          "Stores"
        ]
      }
    },
    "/tenant/{storeId}/products/{storeId}": {
      "post": {
        "operationId": "ProductsController_create",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tạo sản phẩm thành công",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Dữ liệu không hợp lệ"
          },
          "403": {
            "description": "Không có quyền tạo sản phẩm"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Tạo sản phẩm mới",
        "tags": [
          "Products"
        ]
      },
      "get": {
        "operationId": "ProductsController_findAll",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Danh sách sản phẩm",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductResponseDto"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền xem danh sách"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Lấy danh sách sản phẩm",
        "tags": [
          "Products"
        ]
      }
    },
    "/tenant/{storeId}/products/{storeId}/{id}": {
      "get": {
        "operationId": "ProductsController_findOne",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Thông tin sản phẩm",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền xem sản phẩm"
          },
          "404": {
            "description": "Sản phẩm không tồn tại"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Lấy thông tin sản phẩm theo ID",
        "tags": [
          "Products"
        ]
      },
      "patch": {
        "operationId": "ProductsController_update",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cập nhật thành công",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền cập nhật"
          },
          "404": {
            "description": "Sản phẩm không tồn tại"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Cập nhật sản phẩm",
        "tags": [
          "Products"
        ]
      },
      "delete": {
        "operationId": "ProductsController_remove",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Xóa thành công"
          },
          "403": {
            "description": "Không có quyền xóa"
          },
          "404": {
            "description": "Sản phẩm không tồn tại"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Xóa sản phẩm",
        "tags": [
          "Products"
        ]
      }
    },
    "/tenant/{storeId}/products/{storeId}/{id}/restore": {
      "patch": {
        "operationId": "ProductsController_restore",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Khôi phục thành công"
          },
          "403": {
            "description": "Không có quyền khôi phục"
          },
          "404": {
            "description": "Sản phẩm không tồn tại hoặc chưa bị xóa mềm"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Khôi phục sản phẩm đã xóa mềm",
        "tags": [
          "Products"
        ]
      }
    },
    "/tenant/{storeId}/products/store/{storeId}": {
      "get": {
        "operationId": "ProductsController_findByStore",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Danh sách sản phẩm của store"
          },
          "403": {
            "description": "Không có quyền truy cập store này"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Lấy sản phẩm theo store (với kiểm tra quyền)",
        "tags": [
          "Products"
        ]
      }
    },
    "/tenant/{storeId}/categories/{storeId}": {
      "post": {
        "operationId": "CategoriesController_create",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tạo danh mục thành công",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Dữ liệu không hợp lệ"
          },
          "403": {
            "description": "Không có quyền tạo danh mục"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Tạo danh mục mới",
        "tags": [
          "Categories"
        ]
      },
      "get": {
        "operationId": "CategoriesController_findAll",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Danh sách danh mục",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryResponseDto"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền xem danh sách"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Lấy danh sách danh mục",
        "tags": [
          "Categories"
        ]
      }
    },
    "/tenant/{storeId}/categories/{storeId}/{id}": {
      "get": {
        "operationId": "CategoriesController_findOne",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Thông tin danh mục",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền xem danh mục"
          },
          "404": {
            "description": "Danh mục không tồn tại"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Lấy thông tin danh mục theo ID",
        "tags": [
          "Categories"
        ]
      },
      "patch": {
        "operationId": "CategoriesController_update",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cập nhật thành công",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền cập nhật"
          },
          "404": {
            "description": "Danh mục không tồn tại"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Cập nhật danh mục",
        "tags": [
          "Categories"
        ]
      },
      "delete": {
        "operationId": "CategoriesController_remove",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Xóa thành công"
          },
          "403": {
            "description": "Không có quyền xóa"
          },
          "404": {
            "description": "Danh mục không tồn tại"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Xóa danh mục",
        "tags": [
          "Categories"
        ]
      }
    },
    "/tenant/{storeId}/categories/{storeId}/{id}/restore": {
      "patch": {
        "operationId": "CategoriesController_restore",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Khôi phục thành công"
          },
          "403": {
            "description": "Không có quyền khôi phục"
          },
          "404": {
            "description": "Danh mục không tồn tại hoặc chưa bị xóa mềm"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Khôi phục danh mục đã xóa mềm",
        "tags": [
          "Categories"
        ]
      }
    },
    "/tenant/{storeId}/categories/{storeId}/parent/{parentId}": {
      "get": {
        "operationId": "CategoriesController_findByParent",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parentId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Danh sách danh mục con",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryResponseDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Lấy danh mục con theo danh mục cha",
        "tags": [
          "Categories"
        ]
      }
    },
    "/tenant/{storeId}/categories/{storeId}/tree": {
      "get": {
        "operationId": "CategoriesController_getCategoryTree",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cây danh mục",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryResponseDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Lấy cây danh mục lồng nhau",
        "tags": [
          "Categories"
        ]
      }
    },
    "/tenant/{storeId}/customers/{storeId}": {
      "post": {
        "operationId": "CustomersController_create",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tạo khách hàng thành công",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Dữ liệu không hợp lệ"
          },
          "403": {
            "description": "Không có quyền tạo khách hàng"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Tạo khách hàng mới",
        "tags": [
          "Customers"
        ]
      },
      "get": {
        "operationId": "CustomersController_findAll",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Danh sách khách hàng",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerResponseDto"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền xem danh sách"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Lấy danh sách khách hàng",
        "tags": [
          "Customers"
        ]
      }
    },
    "/tenant/{storeId}/customers/{storeId}/{id}": {
      "get": {
        "operationId": "CustomersController_findOne",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Thông tin khách hàng",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền xem khách hàng"
          },
          "404": {
            "description": "Khách hàng không tồn tại"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Lấy thông tin khách hàng theo ID",
        "tags": [
          "Customers"
        ]
      },
      "patch": {
        "operationId": "CustomersController_update",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomerDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cập nhật thành công",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền cập nhật"
          },
          "404": {
            "description": "Khách hàng không tồn tại"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Cập nhật khách hàng",
        "tags": [
          "Customers"
        ]
      },
      "delete": {
        "operationId": "CustomersController_remove",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Xóa thành công"
          },
          "403": {
            "description": "Không có quyền xóa"
          },
          "404": {
            "description": "Khách hàng không tồn tại"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Xóa khách hàng",
        "tags": [
          "Customers"
        ]
      }
    },
    "/tenant/{storeId}/customers/{storeId}/{id}/restore": {
      "patch": {
        "operationId": "CustomersController_restore",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Khôi phục thành công"
          },
          "403": {
            "description": "Không có quyền khôi phục"
          },
          "404": {
            "description": "Khách hàng không tồn tại hoặc chưa bị xóa mềm"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Khôi phục khách hàng đã xóa mềm",
        "tags": [
          "Customers"
        ]
      }
    },
    "/tenant/{storeId}/customers/{storeId}/search/{keyword}": {
      "get": {
        "operationId": "CustomersController_search",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "keyword",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Kết quả tìm kiếm",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerResponseDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Tìm kiếm khách hàng",
        "tags": [
          "Customers"
        ]
      }
    },
    "/tenant/{storeId}/customers/{storeId}/filter": {
      "post": {
        "operationId": "CustomersController_filter",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Danh sách khách hàng"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Tìm kiếm nâng cao khách hàng",
        "tags": [
          "Customers"
        ]
      }
    },
    "/tenant/{storeId}/orders/{storeId}": {
      "post": {
        "operationId": "OrdersController_create",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tạo đơn hàng thành công",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Dữ liệu không hợp lệ"
          },
          "403": {
            "description": "Không có quyền tạo đơn hàng"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Tạo đơn hàng mới",
        "tags": [
          "Orders"
        ]
      },
      "get": {
        "operationId": "OrdersController_findAll",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Danh sách đơn hàng",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderResponseDto"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền xem danh sách"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Lấy danh sách đơn hàng",
        "tags": [
          "Orders"
        ]
      }
    },
    "/tenant/{storeId}/orders/{storeId}/atomic": {
      "post": {
        "operationId": "OrdersController_createOrderAtomic",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderAtomicDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tạo đơn hàng thành công với transaction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Dữ liệu không hợp lệ hoặc kho không đủ"
          },
          "403": {
            "description": "Không có quyền tạo đơn hàng"
          },
          "500": {
            "description": "Lỗi transaction hoặc thanh toán"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Tạo đơn hàng với atomic transaction (trừ kho, tạo đơn hàng, thanh toán, audit log)",
        "tags": [
          "Orders"
        ]
      }
    },
    "/tenant/{storeId}/orders/{storeId}/{id}": {
      "get": {
        "operationId": "OrdersController_findOne",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Thông tin đơn hàng",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền xem đơn hàng"
          },
          "404": {
            "description": "Đơn hàng không tồn tại"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Lấy thông tin đơn hàng theo ID",
        "tags": [
          "Orders"
        ]
      },
      "patch": {
        "operationId": "OrdersController_update",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrderDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cập nhật thành công",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền cập nhật"
          },
          "404": {
            "description": "Đơn hàng không tồn tại"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Cập nhật đơn hàng",
        "tags": [
          "Orders"
        ]
      },
      "delete": {
        "operationId": "OrdersController_remove",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Xóa thành công"
          },
          "403": {
            "description": "Không có quyền xóa"
          },
          "404": {
            "description": "Đơn hàng không tồn tại"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Xóa đơn hàng",
        "tags": [
          "Orders"
        ]
      }
    },
    "/tenant/{storeId}/orders/{storeId}/{id}/restore": {
      "patch": {
        "operationId": "OrdersController_restore",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Khôi phục thành công"
          },
          "403": {
            "description": "Không có quyền khôi phục"
          },
          "404": {
            "description": "Đơn hàng không tồn tại hoặc chưa bị xóa mềm"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Khôi phục đơn hàng đã xóa mềm",
        "tags": [
          "Orders"
        ]
      }
    },
    "/tenant/{storeId}/orders/{storeId}/{id}/confirm": {
      "patch": {
        "operationId": "OrdersController_confirmOrder",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Xác nhận thành công"
          },
          "400": {
            "description": "Trạng thái đơn hàng không hợp lệ"
          },
          "403": {
            "description": "Không có quyền xác nhận"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Xác nhận đơn hàng",
        "tags": [
          "Orders"
        ]
      }
    },
    "/tenant/{storeId}/orders/{storeId}/{id}/ship": {
      "patch": {
        "operationId": "OrdersController_shipOrder",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Giao hàng thành công"
          },
          "400": {
            "description": "Trạng thái đơn hàng không hợp lệ"
          },
          "403": {
            "description": "Không có quyền giao hàng"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Giao hàng",
        "tags": [
          "Orders"
        ]
      }
    },
    "/tenant/{storeId}/orders/{storeId}/{id}/complete": {
      "patch": {
        "operationId": "OrdersController_completeOrder",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Hoàn thành thành công"
          },
          "400": {
            "description": "Trạng thái đơn hàng không hợp lệ"
          },
          "403": {
            "description": "Không có quyền hoàn thành"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Hoàn thành đơn hàng",
        "tags": [
          "Orders"
        ]
      }
    },
    "/tenant/{storeId}/orders/{storeId}/{id}/cancel": {
      "patch": {
        "operationId": "OrdersController_cancelOrder",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Hủy thành công"
          },
          "400": {
            "description": "Trạng thái đơn hàng không hợp lệ"
          },
          "403": {
            "description": "Không có quyền hủy"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Hủy đơn hàng",
        "tags": [
          "Orders"
        ]
      }
    },
    "/tenant/{storeId}/orders/{storeId}/status/{status}": {
      "get": {
        "operationId": "OrdersController_findByStatus",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Danh sách đơn hàng theo trạng thái",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderResponseDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Lấy đơn hàng theo trạng thái",
        "tags": [
          "Orders"
        ]
      }
    },
    "/tenant/{storeId}/orders/{storeId}/customer/{customerId}": {
      "get": {
        "operationId": "OrdersController_findByCustomer",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Danh sách đơn hàng của khách hàng",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderResponseDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Lấy đơn hàng theo khách hàng",
        "tags": [
          "Orders"
        ]
      }
    },
    "/tenant/{storeId}/order-items": {
      "post": {
        "operationId": "OrderItemsController_create",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderItemDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Order item created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderItemResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation failed"
          },
          "403": {
            "description": "Forbidden - insufficient permissions"
          },
          "409": {
            "description": "Conflict - order item already exists"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Create a new order item",
        "tags": [
          "Order Items"
        ]
      },
      "get": {
        "operationId": "OrderItemsController_findAll",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return all order items",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderItemResponseDto"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get all order items",
        "tags": [
          "Order Items"
        ]
      }
    },
    "/tenant/{storeId}/order-items/order/{orderId}": {
      "get": {
        "operationId": "OrderItemsController_findByOrder",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "required": true,
            "in": "path",
            "description": "Order ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return order items for the order",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderItemResponseDto"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get all order items for a specific order",
        "tags": [
          "Order Items"
        ]
      }
    },
    "/tenant/{storeId}/order-items/{id}": {
      "get": {
        "operationId": "OrderItemsController_findOne",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Order Item ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order item found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderItemResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions"
          },
          "404": {
            "description": "Order item not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get order item by ID",
        "tags": [
          "Order Items"
        ]
      },
      "patch": {
        "operationId": "OrderItemsController_update",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Order Item ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrderItemDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order item updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderItemResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation failed"
          },
          "403": {
            "description": "Forbidden - insufficient permissions"
          },
          "404": {
            "description": "Order item not found"
          },
          "409": {
            "description": "Conflict - order item already exists"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Update order item",
        "tags": [
          "Order Items"
        ]
      },
      "delete": {
        "operationId": "OrderItemsController_remove",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Order Item ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order item soft deleted successfully"
          },
          "403": {
            "description": "Forbidden - insufficient permissions"
          },
          "404": {
            "description": "Order item not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Soft delete order item",
        "tags": [
          "Order Items"
        ]
      }
    },
    "/tenant/{storeId}/order-items/{id}/restore": {
      "patch": {
        "operationId": "OrderItemsController_restore",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Order Item ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order item restored successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderItemResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions"
          },
          "404": {
            "description": "Order item not found or not deleted"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Restore a soft deleted order item",
        "tags": [
          "Order Items"
        ]
      }
    },
    "/tenant/{storeId}/payments": {
      "post": {
        "operationId": "PaymentsController_create",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payment created successfully"
          },
          "400": {
            "description": "Bad request - validation failed"
          },
          "403": {
            "description": "Forbidden - insufficient permissions"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Create a new payment",
        "tags": [
          "Payments"
        ]
      },
      "get": {
        "operationId": "PaymentsController_findAll",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_order",
            "required": false,
            "in": "query",
            "description": "Sort order (ASC or DESC)",
            "schema": {}
          },
          {
            "name": "sort_by",
            "required": false,
            "in": "query",
            "description": "Field to sort by",
            "schema": {}
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of items per page",
            "schema": {}
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number for pagination",
            "schema": {}
          },
          {
            "name": "end_date",
            "required": false,
            "in": "query",
            "description": "End date filter (ISO string)",
            "schema": {}
          },
          {
            "name": "start_date",
            "required": false,
            "in": "query",
            "description": "Start date filter (ISO string)",
            "schema": {}
          },
          {
            "name": "max_amount",
            "required": false,
            "in": "query",
            "description": "Maximum amount filter",
            "schema": {}
          },
          {
            "name": "min_amount",
            "required": false,
            "in": "query",
            "description": "Minimum amount filter",
            "schema": {}
          },
          {
            "name": "order_id",
            "required": false,
            "in": "query",
            "description": "Filter by order ID",
            "schema": {}
          },
          {
            "name": "paid_by_user_id",
            "required": false,
            "in": "query",
            "description": "Filter by user who made payment",
            "schema": {}
          },
          {
            "name": "payment_method_id",
            "required": false,
            "in": "query",
            "description": "Filter by payment method",
            "schema": {}
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "Filter by payment status",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Payments retrieved successfully"
          },
          "403": {
            "description": "Forbidden - insufficient permissions"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get all payments with advanced filtering",
        "tags": [
          "Payments"
        ]
      }
    },
    "/tenant/{storeId}/payments/stats": {
      "get": {
        "operationId": "PaymentsController_getStats",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "payment_method_id",
            "required": false,
            "in": "query",
            "description": "Filter by payment method",
            "schema": {}
          },
          {
            "name": "end_date",
            "required": false,
            "in": "query",
            "description": "End date filter (ISO string)",
            "schema": {}
          },
          {
            "name": "start_date",
            "required": false,
            "in": "query",
            "description": "Start date filter (ISO string)",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Payment statistics retrieved successfully"
          },
          "403": {
            "description": "Forbidden - insufficient permissions"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get payment statistics",
        "tags": [
          "Payments"
        ]
      }
    },
    "/tenant/{storeId}/payments/{id}": {
      "get": {
        "operationId": "PaymentsController_findById",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Payment ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payment found"
          },
          "403": {
            "description": "Forbidden - insufficient permissions"
          },
          "404": {
            "description": "Payment not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get payment by ID",
        "tags": [
          "Payments"
        ]
      },
      "patch": {
        "operationId": "PaymentsController_update",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Payment ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePaymentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payment updated successfully"
          },
          "400": {
            "description": "Bad request - validation failed"
          },
          "403": {
            "description": "Forbidden - insufficient permissions"
          },
          "404": {
            "description": "Payment not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Update payment",
        "tags": [
          "Payments"
        ]
      },
      "delete": {
        "operationId": "PaymentsController_remove",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Payment ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payment soft deleted successfully"
          },
          "403": {
            "description": "Forbidden - insufficient permissions"
          },
          "404": {
            "description": "Payment not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Soft delete payment",
        "tags": [
          "Payments"
        ]
      }
    },
    "/tenant/{storeId}/payments/{id}/restore": {
      "patch": {
        "operationId": "PaymentsController_restore",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Payment ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payment restored successfully"
          },
          "403": {
            "description": "Forbidden - insufficient permissions"
          },
          "404": {
            "description": "Payment not found or not deleted"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Restore soft-deleted payment",
        "tags": [
          "Payments"
        ]
      }
    },
    "/tenant/{storeId}/vouchers": {
      "post": {
        "operationId": "VouchersController_create",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateVoucherDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoucherResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Create a new voucher",
        "tags": [
          "Vouchers"
        ]
      },
      "get": {
        "operationId": "VouchersController_findAll",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VoucherResponseDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get all vouchers",
        "tags": [
          "Vouchers"
        ]
      }
    },
    "/tenant/{storeId}/vouchers/{id}": {
      "get": {
        "operationId": "VouchersController_findById",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Voucher ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoucherResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get voucher by ID",
        "tags": [
          "Vouchers"
        ]
      },
      "patch": {
        "operationId": "VouchersController_update",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Voucher ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateVoucherDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoucherResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Update voucher",
        "tags": [
          "Vouchers"
        ]
      },
      "delete": {
        "operationId": "VouchersController_remove",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Voucher ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Voucher deleted successfully"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Soft delete voucher",
        "tags": [
          "Vouchers"
        ]
      }
    },
    "/tenant/{storeId}/vouchers/{id}/restore": {
      "patch": {
        "operationId": "VouchersController_restore",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Voucher ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoucherResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Restore soft deleted voucher",
        "tags": [
          "Vouchers"
        ]
      }
    },
    "/tenant/{storeId}/suppliers": {
      "post": {
        "operationId": "SuppliersController_create",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSupplierDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Create a new supplier",
        "tags": [
          "Suppliers"
        ]
      },
      "get": {
        "operationId": "SuppliersController_findAll",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Get all suppliers",
        "tags": [
          "Suppliers"
        ]
      }
    },
    "/tenant/{storeId}/suppliers/{id}": {
      "get": {
        "operationId": "SuppliersController_findById",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Supplier ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Get supplier by ID",
        "tags": [
          "Suppliers"
        ]
      },
      "patch": {
        "operationId": "SuppliersController_update",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Supplier ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSupplierDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Update supplier",
        "tags": [
          "Suppliers"
        ]
      },
      "delete": {
        "operationId": "SuppliersController_remove",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Supplier ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Delete supplier",
        "tags": [
          "Suppliers"
        ]
      }
    },
    "/tenant/{storeId}/suppliers/{id}/restore": {
      "patch": {
        "operationId": "SuppliersController_restore",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Supplier ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Restore soft-deleted supplier",
        "tags": [
          "Suppliers"
        ]
      }
    },
    "/tenant/{storeId}/dispatch-orders": {
      "post": {
        "operationId": "DispatchOrdersController_create",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDispatchOrderDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Create a new dispatch order",
        "tags": [
          "Dispatch Orders"
        ]
      },
      "get": {
        "operationId": "DispatchOrdersController_findAll",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get all dispatch orders",
        "tags": [
          "Dispatch Orders"
        ]
      }
    },
    "/tenant/{storeId}/dispatch-orders/{id}": {
      "get": {
        "operationId": "DispatchOrdersController_findById",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Dispatch Order ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get dispatch order by ID",
        "tags": [
          "Dispatch Orders"
        ]
      },
      "patch": {
        "operationId": "DispatchOrdersController_update",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Dispatch Order ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDispatchOrderDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Update dispatch order",
        "tags": [
          "Dispatch Orders"
        ]
      },
      "delete": {
        "operationId": "DispatchOrdersController_remove",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Dispatch Order ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Delete dispatch order",
        "tags": [
          "Dispatch Orders"
        ]
      }
    },
    "/tenant/{storeId}/return-orders": {
      "post": {
        "operationId": "ReturnOrdersController_create",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReturnOrderDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Create a new return order",
        "tags": [
          "Return Orders"
        ]
      },
      "get": {
        "operationId": "ReturnOrdersController_findAll",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get all return orders",
        "tags": [
          "Return Orders"
        ]
      }
    },
    "/tenant/{storeId}/return-orders/{id}": {
      "get": {
        "operationId": "ReturnOrdersController_findById",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Return Order ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get return order by ID",
        "tags": [
          "Return Orders"
        ]
      },
      "patch": {
        "operationId": "ReturnOrdersController_update",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Return Order ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReturnOrderDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Update return order",
        "tags": [
          "Return Orders"
        ]
      },
      "delete": {
        "operationId": "ReturnOrdersController_remove",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Return Order ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Delete return order",
        "tags": [
          "Return Orders"
        ]
      }
    },
    "/tenant/{storeId}/return-orders/{id}/restore": {
      "patch": {
        "operationId": "ReturnOrdersController_restore",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Return Order ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Restore a soft deleted return order",
        "tags": [
          "Return Orders"
        ]
      }
    },
    "/tenant/{storeId}/stock-adjustments": {
      "post": {
        "operationId": "StockAdjustmentsController_create",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStockAdjustmentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Create a new stock adjustment",
        "tags": [
          "Stock Adjustments"
        ]
      },
      "get": {
        "operationId": "StockAdjustmentsController_findAll",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Get all stock adjustments",
        "tags": [
          "Stock Adjustments"
        ]
      }
    },
    "/tenant/{storeId}/stock-adjustments/{id}": {
      "get": {
        "operationId": "StockAdjustmentsController_findById",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Stock Adjustment ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Get stock adjustment by ID",
        "tags": [
          "Stock Adjustments"
        ]
      },
      "patch": {
        "operationId": "StockAdjustmentsController_update",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Stock Adjustment ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStockAdjustmentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Update stock adjustment",
        "tags": [
          "Stock Adjustments"
        ]
      },
      "delete": {
        "operationId": "StockAdjustmentsController_remove",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Stock Adjustment ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Soft delete stock adjustment",
        "tags": [
          "Stock Adjustments"
        ]
      }
    },
    "/tenant/{storeId}/stock-adjustments/{id}/restore": {
      "patch": {
        "operationId": "StockAdjustmentsController_restore",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Stock Adjustment ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Restore soft deleted stock adjustment",
        "tags": [
          "Stock Adjustments"
        ]
      }
    },
    "/tenant/{storeId}/inventory-transfers": {
      "post": {
        "operationId": "InventoryTransfersController_create",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInventoryTransferDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Inventory transfer created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryTransferResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Create a new inventory transfer",
        "tags": [
          "Inventory Transfers"
        ]
      },
      "get": {
        "operationId": "InventoryTransfersController_findAll",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Inventory transfers retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InventoryTransferResponseDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get all inventory transfers",
        "tags": [
          "Inventory Transfers"
        ]
      }
    },
    "/tenant/{storeId}/inventory-transfers/{id}": {
      "get": {
        "operationId": "InventoryTransfersController_findById",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Inventory Transfer ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Inventory transfer retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryTransferResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Inventory transfer not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get inventory transfer by ID",
        "tags": [
          "Inventory Transfers"
        ]
      },
      "patch": {
        "operationId": "InventoryTransfersController_update",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Inventory Transfer ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInventoryTransferDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Inventory transfer updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryTransferResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Inventory transfer not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Update inventory transfer",
        "tags": [
          "Inventory Transfers"
        ]
      },
      "delete": {
        "operationId": "InventoryTransfersController_remove",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Inventory Transfer ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Inventory transfer deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Inventory transfer not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Delete inventory transfer",
        "tags": [
          "Inventory Transfers"
        ]
      }
    },
    "/tenant/{storeId}/inventory-transfers/{id}/restore": {
      "post": {
        "operationId": "InventoryTransfersController_restore",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Inventory Transfer ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Inventory transfer restored successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryTransferResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Inventory transfer not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Restore deleted inventory transfer",
        "tags": [
          "Inventory Transfers"
        ]
      }
    },
    "/tenant/{storeId}/price-histories": {
      "post": {
        "operationId": "PriceHistoriesController_create",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePriceHistoryDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Price history created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceHistoryResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Create a new price history",
        "tags": [
          "Price Histories"
        ]
      },
      "get": {
        "operationId": "PriceHistoriesController_findAll",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Price histories retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PriceHistoryResponseDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get all price histories",
        "tags": [
          "Price Histories"
        ]
      }
    },
    "/tenant/{storeId}/price-histories/{id}": {
      "get": {
        "operationId": "PriceHistoriesController_findById",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Price History ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Price history retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceHistoryResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Price history not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get price history by ID",
        "tags": [
          "Price Histories"
        ]
      },
      "patch": {
        "operationId": "PriceHistoriesController_update",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Price History ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePriceHistoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Price history updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceHistoryResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Price history not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Update price history",
        "tags": [
          "Price Histories"
        ]
      },
      "delete": {
        "operationId": "PriceHistoriesController_remove",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Price History ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Price history deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Price history not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Delete price history",
        "tags": [
          "Price Histories"
        ]
      }
    },
    "/tenant/{storeId}/price-histories/{id}/restore": {
      "patch": {
        "operationId": "PriceHistoriesController_restore",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Price History ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Price history restored successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceHistoryResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Price history not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Restore a soft deleted price history",
        "tags": [
          "Price Histories"
        ]
      }
    },
    "/tenant/{storeId}/promotions": {
      "post": {
        "operationId": "PromotionsController_create",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePromotionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Create a new promotion",
        "tags": [
          "Promotions"
        ]
      },
      "get": {
        "operationId": "PromotionsController_findAll",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get all promotions",
        "tags": [
          "Promotions"
        ]
      }
    },
    "/tenant/{storeId}/promotions/{id}": {
      "get": {
        "operationId": "PromotionsController_findById",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Promotion ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get promotion by ID",
        "tags": [
          "Promotions"
        ]
      },
      "patch": {
        "operationId": "PromotionsController_update",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Promotion ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePromotionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Update promotion",
        "tags": [
          "Promotions"
        ]
      },
      "delete": {
        "operationId": "PromotionsController_remove",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Promotion ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Delete promotion",
        "tags": [
          "Promotions"
        ]
      }
    },
    "/tenant/{storeId}/promotions/{id}/restore": {
      "patch": {
        "operationId": "PromotionsController_restore",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Promotion ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Restore a soft deleted promotion",
        "tags": [
          "Promotions"
        ]
      }
    },
    "/tenant/{storeId}/installments": {
      "post": {
        "operationId": "InstallmentsController_create",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInstallmentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Installment created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstallmentResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Create a new installment",
        "tags": [
          "Installments"
        ]
      },
      "get": {
        "operationId": "InstallmentsController_findAll",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Installments retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InstallmentResponseDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get all installments",
        "tags": [
          "Installments"
        ]
      }
    },
    "/tenant/{storeId}/installments/{id}": {
      "get": {
        "operationId": "InstallmentsController_findById",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Installment ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Installment retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstallmentResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Installment not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get installment by ID",
        "tags": [
          "Installments"
        ]
      },
      "patch": {
        "operationId": "InstallmentsController_update",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Installment ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInstallmentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Installment updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstallmentResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Installment not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Update installment",
        "tags": [
          "Installments"
        ]
      },
      "delete": {
        "operationId": "InstallmentsController_remove",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Installment ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Installment deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Installment not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Delete installment",
        "tags": [
          "Installments"
        ]
      }
    },
    "/tenant/{storeId}/installments/{id}/restore": {
      "post": {
        "operationId": "InstallmentsController_restore",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Installment ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Installment restored successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstallmentResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Installment not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Restore deleted installment",
        "tags": [
          "Installments"
        ]
      }
    },
    "/tenant/{storeId}/debt-transactions": {
      "post": {
        "operationId": "DebtTransactionsController_create",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDebtTransactionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Create a new debt transaction",
        "tags": [
          "Debt Transactions"
        ]
      },
      "get": {
        "operationId": "DebtTransactionsController_findAll",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get all debt transactions",
        "tags": [
          "Debt Transactions"
        ]
      }
    },
    "/tenant/{storeId}/debt-transactions/{id}": {
      "get": {
        "operationId": "DebtTransactionsController_findById",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Debt Transaction ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get debt transaction by ID",
        "tags": [
          "Debt Transactions"
        ]
      },
      "patch": {
        "operationId": "DebtTransactionsController_update",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Debt Transaction ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDebtTransactionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Update debt transaction",
        "tags": [
          "Debt Transactions"
        ]
      },
      "delete": {
        "operationId": "DebtTransactionsController_remove",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Debt Transaction ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Delete debt transaction",
        "tags": [
          "Debt Transactions"
        ]
      }
    },
    "/tenant/{storeId}/debt-transactions/{id}/restore": {
      "patch": {
        "operationId": "DebtTransactionsController_restore",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Debt Transaction ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Khôi phục debt transaction đã xóa mềm",
        "tags": [
          "Debt Transactions"
        ]
      }
    },
    "/tenant/{storeId}/loyalty-point-logs": {
      "post": {
        "operationId": "LoyaltyPointLogsController_create",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLoyaltyPointLogDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Loyalty point log created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltyPointLogResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Create a new loyalty point log",
        "tags": [
          "Loyalty Point Logs"
        ]
      },
      "get": {
        "operationId": "LoyaltyPointLogsController_findAll",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Loyalty point logs retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LoyaltyPointLogResponseDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get all loyalty point logs",
        "tags": [
          "Loyalty Point Logs"
        ]
      }
    },
    "/tenant/{storeId}/loyalty-point-logs/{id}": {
      "get": {
        "operationId": "LoyaltyPointLogsController_findById",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Loyalty Point Log ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Loyalty point log retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltyPointLogResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Loyalty point log not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get loyalty point log by ID",
        "tags": [
          "Loyalty Point Logs"
        ]
      },
      "patch": {
        "operationId": "LoyaltyPointLogsController_update",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Loyalty Point Log ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLoyaltyPointLogDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Loyalty point log updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltyPointLogResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Loyalty point log not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Update loyalty point log",
        "tags": [
          "Loyalty Point Logs"
        ]
      },
      "delete": {
        "operationId": "LoyaltyPointLogsController_remove",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Loyalty Point Log ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Loyalty point log deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Loyalty point log not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Delete loyalty point log",
        "tags": [
          "Loyalty Point Logs"
        ]
      }
    },
    "/tenant/{storeId}/loyalty-point-logs/{id}/restore": {
      "patch": {
        "operationId": "LoyaltyPointLogsController_restore",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Loyalty Point Log ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Loyalty point log restored successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoyaltyPointLogResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Loyalty point log not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Restore a soft deleted loyalty point log",
        "tags": [
          "Loyalty Point Logs"
        ]
      }
    },
    "/tenant/{storeId}/job-schedules": {
      "post": {
        "operationId": "JobSchedulesController_create",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateJobScheduleDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Job schedule created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobScheduleResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Create a new job schedule",
        "tags": [
          "Job Schedules"
        ]
      },
      "get": {
        "operationId": "JobSchedulesController_findAll",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job schedules retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobScheduleResponseDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get all job schedules",
        "tags": [
          "Job Schedules"
        ]
      }
    },
    "/tenant/{storeId}/job-schedules/{id}": {
      "get": {
        "operationId": "JobSchedulesController_findById",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Job Schedule ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job schedule retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobScheduleResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Job schedule not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get job schedule by ID",
        "tags": [
          "Job Schedules"
        ]
      },
      "patch": {
        "operationId": "JobSchedulesController_update",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Job Schedule ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateJobScheduleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Job schedule updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobScheduleResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Job schedule not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Update job schedule",
        "tags": [
          "Job Schedules"
        ]
      },
      "delete": {
        "operationId": "JobSchedulesController_remove",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Job Schedule ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Job schedule deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Job schedule not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Delete job schedule",
        "tags": [
          "Job Schedules"
        ]
      }
    },
    "/tenant/{storeId}/webhook-logs": {
      "post": {
        "operationId": "WebhookLogsController_create",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWebhookLogDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Webhook log created successfully"
          },
          "400": {
            "description": "Bad request - validation failed"
          },
          "403": {
            "description": "Forbidden - insufficient permissions"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Create a new webhook log",
        "tags": [
          "Webhook Logs"
        ]
      },
      "get": {
        "operationId": "WebhookLogsController_findAll",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook logs retrieved successfully"
          },
          "403": {
            "description": "Forbidden - insufficient permissions"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get all webhook logs",
        "tags": [
          "Webhook Logs"
        ]
      }
    },
    "/tenant/{storeId}/webhook-logs/stats": {
      "get": {
        "operationId": "WebhookLogsController_getStats",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook statistics retrieved successfully"
          },
          "403": {
            "description": "Forbidden - insufficient permissions"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get webhook statistics",
        "tags": [
          "Webhook Logs"
        ]
      }
    },
    "/tenant/{storeId}/webhook-logs/event-type/{eventType}": {
      "get": {
        "operationId": "WebhookLogsController_findByEventType",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "eventType",
            "required": true,
            "in": "path",
            "description": "Event type (e.g., order.created, payment.completed)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook logs by event type retrieved successfully"
          },
          "403": {
            "description": "Forbidden - insufficient permissions"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get webhook logs by event type",
        "tags": [
          "Webhook Logs"
        ]
      }
    },
    "/tenant/{storeId}/webhook-logs/type/{type}": {
      "get": {
        "operationId": "WebhookLogsController_findByType",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "required": true,
            "in": "path",
            "description": "Webhook type (outgoing or incoming)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook logs by type retrieved successfully"
          },
          "403": {
            "description": "Forbidden - insufficient permissions"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get webhook logs by type",
        "tags": [
          "Webhook Logs"
        ]
      }
    },
    "/tenant/{storeId}/webhook-logs/{id}": {
      "get": {
        "operationId": "WebhookLogsController_findById",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Webhook Log ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook log found"
          },
          "403": {
            "description": "Forbidden - insufficient permissions"
          },
          "404": {
            "description": "Webhook log not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get webhook log by ID",
        "tags": [
          "Webhook Logs"
        ]
      },
      "patch": {
        "operationId": "WebhookLogsController_update",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Webhook Log ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWebhookLogDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Webhook log updated successfully"
          },
          "400": {
            "description": "Bad request - validation failed"
          },
          "403": {
            "description": "Forbidden - insufficient permissions"
          },
          "404": {
            "description": "Webhook log not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Update webhook log",
        "tags": [
          "Webhook Logs"
        ]
      },
      "delete": {
        "operationId": "WebhookLogsController_remove",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Webhook Log ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook log soft deleted successfully"
          },
          "403": {
            "description": "Forbidden - insufficient permissions"
          },
          "404": {
            "description": "Webhook log not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Soft delete webhook log",
        "tags": [
          "Webhook Logs"
        ]
      }
    },
    "/tenant/{storeId}/webhook-logs/{id}/restore": {
      "patch": {
        "operationId": "WebhookLogsController_restore",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Webhook Log ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook log restored successfully"
          },
          "403": {
            "description": "Forbidden - insufficient permissions"
          },
          "404": {
            "description": "Webhook log not found or not deleted"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Restore soft deleted webhook log",
        "tags": [
          "Webhook Logs"
        ]
      }
    },
    "/tenant/{storeId}/external-system-logs": {
      "post": {
        "operationId": "ExternalSystemLogsController_create",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateExternalSystemLogDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Create a new external system log",
        "tags": [
          "External System Logs"
        ]
      },
      "get": {
        "operationId": "ExternalSystemLogsController_findAll",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get all external system logs",
        "tags": [
          "External System Logs"
        ]
      }
    },
    "/tenant/{storeId}/external-system-logs/{id}": {
      "get": {
        "operationId": "ExternalSystemLogsController_findById",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "External System Log ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get external system log by ID",
        "tags": [
          "External System Logs"
        ]
      },
      "patch": {
        "operationId": "ExternalSystemLogsController_update",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "External System Log ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateExternalSystemLogDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Update external system log",
        "tags": [
          "External System Logs"
        ]
      },
      "delete": {
        "operationId": "ExternalSystemLogsController_remove",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "External System Log ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Delete external system log",
        "tags": [
          "External System Logs"
        ]
      }
    },
    "/tenant/{storeId}/file-attachments": {
      "post": {
        "operationId": "FileAttachmentsController_create",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFileAttachmentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "File attachment created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileAttachmentResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Create a new file attachment",
        "tags": [
          "File Attachments"
        ]
      },
      "get": {
        "operationId": "FileAttachmentsController_findAll",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File attachments retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FileAttachmentResponseDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get all file attachments",
        "tags": [
          "File Attachments"
        ]
      }
    },
    "/tenant/{storeId}/file-attachments/{id}": {
      "get": {
        "operationId": "FileAttachmentsController_findById",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "File Attachment ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File attachment retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileAttachmentResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "File attachment not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get file attachment by ID",
        "tags": [
          "File Attachments"
        ]
      },
      "patch": {
        "operationId": "FileAttachmentsController_update",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "File Attachment ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFileAttachmentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File attachment updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileAttachmentResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "File attachment not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Update file attachment",
        "tags": [
          "File Attachments"
        ]
      },
      "delete": {
        "operationId": "FileAttachmentsController_remove",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "description": "Store ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "File Attachment ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "File attachment deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "File attachment not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Delete file attachment",
        "tags": [
          "File Attachments"
        ]
      }
    },
    "/tenant/{storeId}/dashboard/overview": {
      "get": {
        "operationId": "DashboardController_getOverview",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dữ liệu tổng quan"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Thống kê tổng quan hệ thống",
        "tags": [
          "Dashboard"
        ]
      }
    },
    "/tenant/{storeId}/dashboard/revenue": {
      "get": {
        "operationId": "DashboardController_getRevenue",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dữ liệu doanh thu"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Thống kê doanh thu theo thời gian",
        "tags": [
          "Dashboard"
        ]
      }
    },
    "/tenant/{storeId}/dashboard/orders": {
      "get": {
        "operationId": "DashboardController_getOrders",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dữ liệu đơn hàng"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Thống kê đơn hàng theo trạng thái/thời gian",
        "tags": [
          "Dashboard"
        ]
      }
    },
    "/tenant/{storeId}/dashboard/customers": {
      "get": {
        "operationId": "DashboardController_getCustomers",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dữ liệu khách hàng"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Thống kê khách hàng",
        "tags": [
          "Dashboard"
        ]
      }
    },
    "/tenant/{storeId}/dashboard/best-selling-products": {
      "get": {
        "operationId": "DashboardController_getBestSellingProducts",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Danh sách sản phẩm bán chạy"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Top sản phẩm bán chạy",
        "tags": [
          "Dashboard"
        ]
      }
    },
    "/tenant/{storeId}/reports/export": {
      "get": {
        "operationId": "ReportController_exportReport",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File báo cáo hoặc dữ liệu báo cáo"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Xuất báo cáo tổng hợp (Excel/PDF)",
        "tags": [
          "Reports"
        ]
      }
    },
    "/tenant/{storeId}/reports/types": {
      "get": {
        "operationId": "ReportController_getReportTypes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Danh sách loại báo cáo"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Lấy danh sách loại báo cáo hỗ trợ",
        "tags": [
          "Reports"
        ]
      }
    },
    "/tenant/{storeId}/reports/preview": {
      "get": {
        "operationId": "ReportController_previewReport",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dữ liệu báo cáo (preview)"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Xem trước dữ liệu báo cáo",
        "tags": [
          "Reports"
        ]
      }
    },
    "/tenant/{storeId}/reports/revenue": {
      "get": {
        "operationId": "ReportController_revenueReport",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Báo cáo doanh thu"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Báo cáo doanh thu chi tiết",
        "tags": [
          "Reports"
        ]
      }
    },
    "/tenant/{storeId}/reports/orders": {
      "get": {
        "operationId": "ReportController_ordersReport",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Báo cáo đơn hàng"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Báo cáo đơn hàng chi tiết",
        "tags": [
          "Reports"
        ]
      }
    },
    "/tenant/{storeId}/reports/customers": {
      "get": {
        "operationId": "ReportController_customersReport",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Báo cáo khách hàng"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Báo cáo khách hàng",
        "tags": [
          "Reports"
        ]
      }
    },
    "/tenant/{storeId}/reports/products": {
      "get": {
        "operationId": "ReportController_productsReport",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Báo cáo sản phẩm"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Báo cáo sản phẩm",
        "tags": [
          "Reports"
        ]
      }
    },
    "/tenant/{storeId}/reports/inventory": {
      "get": {
        "operationId": "ReportController_inventoryReport",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Báo cáo tồn kho"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Báo cáo tồn kho",
        "tags": [
          "Reports"
        ]
      }
    },
    "/tenant/{storeId}/printing/invoice": {
      "post": {
        "operationId": "PrintingController_printInvoice",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Kết quả in hóa đơn"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "In hóa đơn",
        "tags": [
          "Printing"
        ]
      }
    },
    "/tenant/{storeId}/printing/receipt": {
      "post": {
        "operationId": "PrintingController_printReceipt",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Kết quả in phiếu thu"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "In phiếu thu",
        "tags": [
          "Printing"
        ]
      }
    },
    "/tenant/{storeId}/printing/barcode": {
      "post": {
        "operationId": "PrintingController_printBarcode",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Kết quả in nhãn mã vạch"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "In nhãn mã vạch",
        "tags": [
          "Printing"
        ]
      }
    },
    "/tenant/{storeId}/printing/quotation": {
      "post": {
        "operationId": "PrintingController_printQuotation",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Kết quả in báo giá"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "In báo giá",
        "tags": [
          "Printing"
        ]
      }
    },
    "/orders/recreate/{storeId}": {
      "post": {
        "operationId": "RecreateOrderController_recreateOrder",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Đơn hàng mới được tạo lại"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Tạo lại đơn hàng từ đơn cũ (clone)",
        "tags": [
          "RecreateOrder"
        ]
      }
    },
    "/stock-transfers": {
      "post": {
        "operationId": "StockTransferController_create",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStockTransferDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Phiếu chuyển kho đã tạo"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Tạo phiếu chuyển kho",
        "tags": [
          "StockTransfer"
        ]
      },
      "get": {
        "operationId": "StockTransferController_findAll",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Danh sách phiếu chuyển kho"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Lấy danh sách phiếu chuyển kho",
        "tags": [
          "StockTransfer"
        ]
      }
    },
    "/stock-transfers/{id}": {
      "get": {
        "operationId": "StockTransferController_findOne",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Chi tiết phiếu chuyển kho"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Lấy chi tiết phiếu chuyển kho",
        "tags": [
          "StockTransfer"
        ]
      },
      "put": {
        "operationId": "StockTransferController_update",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStockTransferDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Phiếu chuyển kho đã cập nhật"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Cập nhật phiếu chuyển kho",
        "tags": [
          "StockTransfer"
        ]
      },
      "delete": {
        "operationId": "StockTransferController_remove",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Phiếu chuyển kho đã xóa"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Xóa phiếu chuyển kho",
        "tags": [
          "StockTransfer"
        ]
      }
    },
    "/stock-transfers/{id}/restore": {
      "post": {
        "operationId": "StockTransferController_restore",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Phiếu chuyển kho đã khôi phục"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Khôi phục phiếu chuyển kho",
        "tags": [
          "StockTransfer"
        ]
      }
    },
    "/stock-transfers/{id}/items": {
      "get": {
        "operationId": "StockTransferController_getTransferItems",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Danh sách sản phẩm"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Lấy danh sách sản phẩm trong phiếu chuyển kho",
        "tags": [
          "StockTransfer"
        ]
      }
    },
    "/tenant/{storeId}/notifications": {
      "get": {
        "operationId": "NotificationController_findAll",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Danh sách thông báo"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Lấy danh sách thông báo",
        "tags": [
          "Notifications"
        ]
      },
      "post": {
        "operationId": "NotificationController_create",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Thông báo đã gửi"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Gửi thông báo",
        "tags": [
          "Notifications"
        ]
      }
    },
    "/tenant/{storeId}/notifications/{id}": {
      "get": {
        "operationId": "NotificationController_findOne",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Chi tiết thông báo"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Lấy chi tiết thông báo",
        "tags": [
          "Notifications"
        ]
      },
      "put": {
        "operationId": "NotificationController_update",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNotificationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Thông báo đã cập nhật"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Cập nhật thông báo",
        "tags": [
          "Notifications"
        ]
      },
      "delete": {
        "operationId": "NotificationController_remove",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Thông báo đã xóa"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Xóa thông báo",
        "tags": [
          "Notifications"
        ]
      }
    },
    "/tenant/{storeId}/notifications/{id}/mark-as-read": {
      "post": {
        "operationId": "NotificationController_markAsRead",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Đã đánh dấu đã đọc"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Đánh dấu đã đọc thông báo",
        "tags": [
          "Notifications"
        ]
      }
    },
    "/tenant/{storeId}/notifications/mark-all-as-read": {
      "post": {
        "operationId": "NotificationController_markAllAsRead",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Đã đánh dấu tất cả đã đọc"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Đánh dấu tất cả thông báo đã đọc",
        "tags": [
          "Notifications"
        ]
      }
    },
    "/tenant/{storeId}/dashboard-analytics/heatmap": {
      "get": {
        "operationId": "DashboardAnalyticsController_getHeatmap",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dữ liệu heatmap"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Lấy dữ liệu heatmap",
        "tags": [
          "DashboardAnalytics"
        ]
      }
    },
    "/tenant/{storeId}/dashboard-analytics/chart": {
      "get": {
        "operationId": "DashboardAnalyticsController_getChart",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dữ liệu biểu đồ"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Lấy dữ liệu biểu đồ tổng hợp",
        "tags": [
          "DashboardAnalytics"
        ]
      }
    },
    "/tenant/{storeId}/dashboard-analytics/industry": {
      "get": {
        "operationId": "DashboardAnalyticsController_getIndustryAnalytics",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dữ liệu phân tích ngành nghề"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Phân tích theo ngành nghề",
        "tags": [
          "DashboardAnalytics"
        ]
      }
    },
    "/tenant/{storeId}/dashboard-analytics/trend": {
      "get": {
        "operationId": "DashboardAnalyticsController_getTrend",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dữ liệu phân tích xu hướng"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Phân tích xu hướng",
        "tags": [
          "DashboardAnalytics"
        ]
      }
    },
    "/tags": {
      "get": {
        "operationId": "TagController_findAll",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "active",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Danh sách nhãn"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Lấy danh sách nhãn",
        "tags": [
          "Tags"
        ]
      },
      "post": {
        "operationId": "TagController_create",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTagDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Nhãn đã tạo"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Tạo nhãn mới",
        "tags": [
          "Tags"
        ]
      }
    },
    "/tags/{id}": {
      "get": {
        "operationId": "TagController_findOne",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Chi tiết nhãn"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Lấy chi tiết nhãn",
        "tags": [
          "Tags"
        ]
      },
      "put": {
        "operationId": "TagController_update",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTagDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Nhãn đã cập nhật"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Cập nhật nhãn",
        "tags": [
          "Tags"
        ]
      },
      "delete": {
        "operationId": "TagController_remove",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Nhãn đã xóa"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Xóa nhãn",
        "tags": [
          "Tags"
        ]
      }
    },
    "/tags/{id}/restore": {
      "post": {
        "operationId": "TagController_restore",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Nhãn đã khôi phục"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Khôi phục nhãn",
        "tags": [
          "Tags"
        ]
      }
    },
    "/banks": {
      "post": {
        "operationId": "BankController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBankDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Tạo bank mới",
        "tags": [
          "Banks"
        ]
      },
      "get": {
        "operationId": "BankController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BankResponseDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Lấy danh sách bank",
        "tags": [
          "Banks"
        ]
      }
    },
    "/banks/{id}": {
      "get": {
        "operationId": "BankController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Lấy chi tiết bank",
        "tags": [
          "Banks"
        ]
      },
      "patch": {
        "operationId": "BankController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBankDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Cập nhật bank",
        "tags": [
          "Banks"
        ]
      },
      "delete": {
        "operationId": "BankController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Xóa mềm bank",
        "tags": [
          "Banks"
        ]
      }
    },
    "/voucher-usage-logs": {
      "get": {
        "operationId": "VoucherUsageLogController_findAll",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lịch sử sử dụng mã giảm giá"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Lấy lịch sử sử dụng mã giảm giá",
        "tags": [
          "VoucherUsageLogs"
        ]
      },
      "post": {
        "operationId": "VoucherUsageLogController_create",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateVoucherUsageLogDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Đã ghi nhận sử dụng mã"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Ghi nhận sử dụng mã giảm giá",
        "tags": [
          "VoucherUsageLogs"
        ]
      }
    },
    "/voucher-usage-logs/{id}": {
      "get": {
        "operationId": "VoucherUsageLogController_findOne",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Chi tiết lịch sử sử dụng mã"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Lấy chi tiết lịch sử sử dụng mã",
        "tags": [
          "VoucherUsageLogs"
        ]
      },
      "put": {
        "operationId": "VoucherUsageLogController_update",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateVoucherUsageLogDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Lịch sử đã cập nhật"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Cập nhật lịch sử sử dụng mã",
        "tags": [
          "VoucherUsageLogs"
        ]
      },
      "delete": {
        "operationId": "VoucherUsageLogController_remove",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lịch sử đã xóa"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Xóa lịch sử sử dụng mã",
        "tags": [
          "VoucherUsageLogs"
        ]
      }
    },
    "/voucher-usage-logs/{id}/restore": {
      "post": {
        "operationId": "VoucherUsageLogController_restore",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lịch sử đã khôi phục"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Khôi phục lịch sử sử dụng mã",
        "tags": [
          "VoucherUsageLogs"
        ]
      }
    },
    "/voucher-usage-logs/stats/overview": {
      "get": {
        "operationId": "VoucherUsageLogController_getStats",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Thống kê hiệu quả chương trình"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Thống kê hiệu quả chương trình",
        "tags": [
          "VoucherUsageLogs"
        ]
      }
    },
    "/voucher-usage-logs/filter/advanced": {
      "get": {
        "operationId": "VoucherUsageLogController_filter",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "voucherId",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Kết quả lọc nâng cao"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Lọc lịch sử sử dụng mã nâng cao",
        "tags": [
          "VoucherUsageLogs"
        ]
      }
    },
    "/voucher-usage-logs/by-voucher/{voucherId}": {
      "get": {
        "operationId": "VoucherUsageLogController_findByVoucher",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "voucherId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lịch sử theo voucher"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Lấy lịch sử theo voucher",
        "tags": [
          "VoucherUsageLogs"
        ]
      }
    },
    "/voucher-usage-logs/by-user/{userId}": {
      "get": {
        "operationId": "VoucherUsageLogController_findByUser",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lịch sử theo user"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Lấy lịch sử theo user",
        "tags": [
          "VoucherUsageLogs"
        ]
      }
    },
    "/voucher-usage-logs/by-order/{orderId}": {
      "get": {
        "operationId": "VoucherUsageLogController_findByOrder",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lịch sử theo order"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Lấy lịch sử theo order",
        "tags": [
          "VoucherUsageLogs"
        ]
      }
    },
    "/payment-methods": {
      "post": {
        "operationId": "PaymentMethodsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentMethodDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payment method created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethodResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Payment method name already exists"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Create a new payment method",
        "tags": [
          "payment-methods"
        ]
      },
      "get": {
        "operationId": "PaymentMethodsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return all payment methods",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentMethodResponseDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get all payment methods",
        "tags": [
          "payment-methods"
        ]
      }
    },
    "/payment-methods/{id}": {
      "get": {
        "operationId": "PaymentMethodsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payment method found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethodResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Payment method not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get a payment method by id",
        "tags": [
          "payment-methods"
        ]
      },
      "patch": {
        "operationId": "PaymentMethodsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePaymentMethodDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payment method updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethodResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Payment method not found"
          },
          "409": {
            "description": "Payment method name already exists"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Update a payment method",
        "tags": [
          "payment-methods"
        ]
      },
      "delete": {
        "operationId": "PaymentMethodsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payment method deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Payment method not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Soft delete a payment method",
        "tags": [
          "payment-methods"
        ]
      }
    },
    "/payment-methods/{id}/restore": {
      "patch": {
        "operationId": "PaymentMethodsController_restore",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payment method restored successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethodResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Payment method not found or not deleted"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Restore a soft deleted payment method",
        "tags": [
          "payment-methods"
        ]
      }
    },
    "/units": {
      "post": {
        "operationId": "UnitsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUnitDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Unit created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Create a new unit",
        "tags": [
          "units"
        ]
      },
      "get": {
        "operationId": "UnitsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return all units",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnitResponseDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get all units",
        "tags": [
          "units"
        ]
      }
    },
    "/units/{id}": {
      "get": {
        "operationId": "UnitsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unit found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Unit not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get a unit by id",
        "tags": [
          "units"
        ]
      },
      "patch": {
        "operationId": "UnitsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUnitDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Unit updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Unit not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Update a unit",
        "tags": [
          "units"
        ]
      },
      "delete": {
        "operationId": "UnitsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unit deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Unit not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Soft delete a unit",
        "tags": [
          "units"
        ]
      }
    },
    "/units/{id}/restore": {
      "patch": {
        "operationId": "UnitsController_restore",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unit restored successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Unit not found or not deleted"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Restore a soft deleted unit",
        "tags": [
          "units"
        ]
      }
    },
    "/user-store-mappings": {
      "post": {
        "operationId": "UserStoreMappingsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserStoreMappingDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User store mapping created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserStoreMappingResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Create a new user store mapping",
        "tags": [
          "user-store-mappings"
        ]
      },
      "get": {
        "operationId": "UserStoreMappingsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return all user store mappings",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserStoreMappingResponseDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get all user store mappings",
        "tags": [
          "user-store-mappings"
        ]
      }
    },
    "/user-store-mappings/{userId}/{storeId}": {
      "get": {
        "operationId": "UserStoreMappingsController_findOne",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User store mapping found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserStoreMappingResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User store mapping not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get a user store mapping by user ID and store ID",
        "tags": [
          "user-store-mappings"
        ]
      },
      "patch": {
        "operationId": "UserStoreMappingsController_update",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserStoreMappingDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User store mapping updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserStoreMappingResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User store mapping not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Update a user store mapping",
        "tags": [
          "user-store-mappings"
        ]
      },
      "delete": {
        "operationId": "UserStoreMappingsController_remove",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User store mapping deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User store mapping not found"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Soft delete a user store mapping",
        "tags": [
          "user-store-mappings"
        ]
      }
    },
    "/user-store-mappings/{userId}/{storeId}/restore": {
      "patch": {
        "operationId": "UserStoreMappingsController_restore",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User store mapping restored successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserStoreMappingResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User store mapping not found or not deleted"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Restore a soft deleted user store mapping",
        "tags": [
          "user-store-mappings"
        ]
      }
    },
    "/tenant/{storeId}/return-order-items": {
      "post": {
        "operationId": "ReturnOrderItemsController_create",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReturnOrderItemDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tạo thành công",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReturnOrderItemResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Dữ liệu không hợp lệ"
          },
          "403": {
            "description": "Không có quyền tạo"
          }
        },
        "security": [
          {
            "access-token": []
          },
          {
            "access-token": []
          }
        ],
        "summary": "Tạo return order item",
        "tags": [
          "return-order-items"
        ]
      },
      "get": {
        "operationId": "ReturnOrderItemsController_findAll",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Danh sách return order items",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReturnOrderItemResponseDto"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền xem danh sách"
          }
        },
        "security": [
          {
            "access-token": []
          },
          {
            "access-token": []
          }
        ],
        "summary": "Lấy danh sách return order items",
        "tags": [
          "return-order-items"
        ]
      }
    },
    "/tenant/{storeId}/return-order-items/{id}": {
      "get": {
        "operationId": "ReturnOrderItemsController_findOne",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Thông tin return order item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReturnOrderItemResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền xem"
          },
          "404": {
            "description": "Return order item không tồn tại"
          }
        },
        "security": [
          {
            "access-token": []
          },
          {
            "access-token": []
          }
        ],
        "summary": "Lấy thông tin return order item theo ID",
        "tags": [
          "return-order-items"
        ]
      },
      "patch": {
        "operationId": "ReturnOrderItemsController_update",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReturnOrderItemDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cập nhật thành công",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReturnOrderItemResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền cập nhật"
          },
          "404": {
            "description": "Return order item không tồn tại"
          }
        },
        "security": [
          {
            "access-token": []
          },
          {
            "access-token": []
          }
        ],
        "summary": "Cập nhật return order item",
        "tags": [
          "return-order-items"
        ]
      },
      "delete": {
        "operationId": "ReturnOrderItemsController_remove",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Xóa thành công"
          },
          "403": {
            "description": "Không có quyền xóa"
          },
          "404": {
            "description": "Return order item không tồn tại"
          }
        },
        "security": [
          {
            "access-token": []
          },
          {
            "access-token": []
          }
        ],
        "summary": "Xóa return order item",
        "tags": [
          "return-order-items"
        ]
      }
    },
    "/tenant/{storeId}/return-order-items/{id}/restore": {
      "patch": {
        "operationId": "ReturnOrderItemsController_restore",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Khôi phục thành công"
          },
          "403": {
            "description": "Không có quyền khôi phục"
          },
          "404": {
            "description": "Return order item không tồn tại hoặc chưa bị xóa mềm"
          }
        },
        "security": [
          {
            "access-token": []
          },
          {
            "access-token": []
          }
        ],
        "summary": "Khôi phục return order item đã xóa mềm",
        "tags": [
          "return-order-items"
        ]
      }
    },
    "/system/log-level": {
      "get": {
        "operationId": "LogLevelController_getLogLevelInfo",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Current log level information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "current": {
                      "type": "string"
                    },
                    "environment": {
                      "type": "string"
                    },
                    "recommended": {
                      "type": "string"
                    },
                    "available": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get current log level information",
        "tags": [
          "System Management"
        ]
      }
    },
    "/system/log-level/change": {
      "post": {
        "operationId": "LogLevelController_changeLogLevel",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeLogLevelDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Log level changed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "previousLevel": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Change log level dynamically",
        "tags": [
          "System Management"
        ]
      }
    },
    "/system/log-level/reset": {
      "post": {
        "operationId": "LogLevelController_resetLogLevel",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Log level reset successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "newLevel": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Reset log level to environment default",
        "tags": [
          "System Management"
        ]
      }
    },
    "/system/log-level/stats": {
      "get": {
        "operationId": "LogLevelController_getLogLevelStats",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Log level statistics",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "current": {
                      "type": "string"
                    },
                    "enabledLevels": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "disabledLevels": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "totalLevels": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get log level statistics",
        "tags": [
          "System Management"
        ]
      }
    },
    "/system/log-level/test": {
      "get": {
        "operationId": "LogLevelController_testLogs",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Test logs generated successfully"
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Test logging at different levels",
        "tags": [
          "System Management"
        ]
      }
    }
  },
  "info": {
    "title": "FarmHub API",
    "description": "FarmHub Backend API Documentation",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "access-token": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http",
        "name": "Authorization",
        "in": "header"
      }
    },
    "schemas": {
      "LoginDto": {
        "type": "object",
        "properties": {
          "usernameOrEmail": {
            "type": "string",
            "description": "Username or email address",
            "example": "admin@example.com"
          },
          "password": {
            "type": "string",
            "description": "User password",
            "example": "admin123"
          }
        },
        "required": [
          "usernameOrEmail",
          "password"
        ]
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "description": "Tên đăng nhập"
          },
          "password": {
            "type": "string",
            "description": "Mật khẩu"
          },
          "fullName": {
            "type": "string",
            "description": "Họ tên"
          },
          "email": {
            "type": "string",
            "description": "Email"
          },
          "phone": {
            "type": "string",
            "description": "Số điện thoại"
          },
          "role": {
            "type": "string",
            "description": "Vai trò",
            "enum": [
              "admin_global",
              "admin_store",
              "store_manager",
              "store_staff",
              "viewer"
            ]
          },
          "isActive": {
            "type": "boolean",
            "description": "Hoạt động"
          },
          "isSuperadmin": {
            "type": "boolean",
            "description": "Superadmin"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Đã xóa mềm"
          },
          "lastLoginAt": {
            "type": "string",
            "description": "Lần đăng nhập cuối"
          },
          "passwordResetToken": {
            "type": "string",
            "description": "Token reset mật khẩu"
          },
          "tokenExpiryAt": {
            "type": "string",
            "description": "Thời gian hết hạn token"
          }
        },
        "required": [
          "userName",
          "password",
          "fullName",
          "email",
          "role"
        ]
      },
      "ForgotPasswordDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email address for password reset",
            "example": "user@example.com"
          }
        },
        "required": [
          "email"
        ]
      },
      "ResetPasswordDto": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Reset token received via email",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "newPassword": {
            "type": "string",
            "description": "New password (8-20 characters)",
            "example": "newSecurePassword123",
            "minLength": 8,
            "maxLength": 20
          }
        },
        "required": [
          "token",
          "newPassword"
        ]
      },
      "RefreshTokenDto": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string",
            "description": "Refresh token for getting new access token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        },
        "required": [
          "refreshToken"
        ]
      },
      "UserResponseDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "ID người dùng"
          },
          "userName": {
            "type": "string",
            "description": "Tên đăng nhập"
          },
          "fullName": {
            "type": "string",
            "description": "Họ tên"
          },
          "email": {
            "type": "string",
            "description": "Email"
          },
          "phone": {
            "type": "string",
            "description": "Số điện thoại"
          },
          "role": {
            "type": "string",
            "description": "Vai trò"
          },
          "isActive": {
            "type": "boolean",
            "description": "Hoạt động"
          },
          "isSuperadmin": {
            "type": "boolean",
            "description": "Superadmin"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Đã xóa mềm"
          },
          "lastLoginAt": {
            "format": "date-time",
            "type": "string",
            "description": "Lần đăng nhập cuối"
          },
          "passwordResetToken": {
            "type": "string",
            "description": "Token reset mật khẩu"
          },
          "tokenExpiryAt": {
            "format": "date-time",
            "type": "string",
            "description": "Thời gian hết hạn token"
          },
          "createdAt": {
            "type": "string",
            "description": "Thời gian tạo",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "description": "Thời gian cập nhật",
            "format": "date-time"
          }
        },
        "required": [
          "userId",
          "userName",
          "fullName",
          "email",
          "role",
          "isActive",
          "isSuperadmin",
          "isDeleted",
          "createdAt",
          "updatedAt"
        ]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "description": "Tên đăng nhập"
          },
          "password": {
            "type": "string",
            "description": "Mật khẩu"
          },
          "fullName": {
            "type": "string",
            "description": "Họ tên"
          },
          "email": {
            "type": "string",
            "description": "Email"
          },
          "phone": {
            "type": "string",
            "description": "Số điện thoại"
          },
          "role": {
            "type": "string",
            "description": "Vai trò",
            "enum": [
              "admin_global",
              "admin_store",
              "store_manager",
              "store_staff",
              "viewer"
            ]
          },
          "isActive": {
            "type": "boolean",
            "description": "Hoạt động"
          },
          "isSuperadmin": {
            "type": "boolean",
            "description": "Superadmin"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Đã xóa mềm"
          },
          "lastLoginAt": {
            "type": "string",
            "description": "Lần đăng nhập cuối"
          },
          "passwordResetToken": {
            "type": "string",
            "description": "Token reset mật khẩu"
          },
          "tokenExpiryAt": {
            "type": "string",
            "description": "Thời gian hết hạn token"
          }
        }
      },
      "CreateStoreDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Tên cửa hàng"
          },
          "address": {
            "type": "string",
            "description": "Địa chỉ"
          },
          "phone": {
            "type": "string",
            "description": "Số điện thoại"
          },
          "email": {
            "type": "string",
            "description": "Email"
          },
          "schemaName": {
            "type": "string",
            "description": "Tên schema database"
          },
          "managerUserId": {
            "type": "string",
            "description": "ID user quản lý"
          },
          "openingHours": {
            "type": "string",
            "description": "Giờ mở cửa"
          },
          "isActive": {
            "type": "boolean",
            "description": "Hoạt động"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Đã xóa mềm"
          },
          "bankId": {
            "type": "string",
            "description": "ID ngân hàng"
          },
          "accountNo": {
            "type": "string",
            "description": "Số tài khoản ngân hàng"
          },
          "accountName": {
            "type": "string",
            "description": "Tên chủ tài khoản"
          },
          "isVatEnabled": {
            "type": "boolean",
            "description": "Bật VAT"
          },
          "vatRate": {
            "type": "number",
            "description": "Tỷ lệ VAT (%)"
          },
          "invoiceFooter": {
            "type": "string",
            "description": "Chân trang hóa đơn"
          },
          "defaultPaperSize": {
            "type": "string",
            "description": "Khổ giấy in mặc định",
            "enum": [
              "k58",
              "k80",
              "a5"
            ]
          },
          "backupSchedule": {
            "type": "string",
            "description": "Lịch backup"
          },
          "defaultUnitId": {
            "type": "string",
            "description": "ID đơn vị tính mặc định"
          },
          "defaultDiscount": {
            "type": "number",
            "description": "Chiết khấu mặc định (%)"
          },
          "defaultShippingFee": {
            "type": "number",
            "description": "Phí ship mặc định"
          }
        },
        "required": [
          "name",
          "address",
          "phone",
          "schemaName"
        ]
      },
      "StoreResponseDto": {
        "type": "object",
        "properties": {
          "storeId": {
            "type": "string",
            "description": "ID cửa hàng"
          },
          "name": {
            "type": "string",
            "description": "Tên cửa hàng"
          },
          "address": {
            "type": "string",
            "description": "Địa chỉ"
          },
          "phone": {
            "type": "string",
            "description": "Số điện thoại"
          },
          "email": {
            "type": "string",
            "description": "Email"
          },
          "schemaName": {
            "type": "string",
            "description": "Tên schema database"
          },
          "managerUserId": {
            "type": "string",
            "description": "ID user quản lý"
          },
          "openingHours": {
            "type": "string",
            "description": "Giờ mở cửa"
          },
          "isActive": {
            "type": "boolean",
            "description": "Hoạt động"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Đã xóa mềm"
          },
          "bankId": {
            "type": "string",
            "description": "ID ngân hàng"
          },
          "accountNo": {
            "type": "string",
            "description": "Số tài khoản ngân hàng"
          },
          "accountName": {
            "type": "string",
            "description": "Tên chủ tài khoản"
          },
          "isVatEnabled": {
            "type": "boolean",
            "description": "Bật VAT"
          },
          "vatRate": {
            "type": "number",
            "description": "Tỷ lệ VAT (%)"
          },
          "invoiceFooter": {
            "type": "string",
            "description": "Chân trang hóa đơn"
          },
          "defaultPaperSize": {
            "type": "string",
            "description": "Khổ giấy in mặc định",
            "enum": [
              "k58",
              "k80",
              "a5"
            ]
          },
          "backupSchedule": {
            "type": "string",
            "description": "Lịch backup"
          },
          "defaultUnitId": {
            "type": "string",
            "description": "ID đơn vị tính mặc định"
          },
          "defaultDiscount": {
            "type": "number",
            "description": "Chiết khấu mặc định (%)"
          },
          "defaultShippingFee": {
            "type": "number",
            "description": "Phí ship mặc định"
          },
          "createdAt": {
            "type": "string",
            "description": "Thời gian tạo",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "description": "Thời gian cập nhật",
            "format": "date-time"
          }
        },
        "required": [
          "storeId",
          "name",
          "address",
          "phone",
          "schemaName",
          "isActive",
          "isDeleted",
          "isVatEnabled",
          "vatRate",
          "defaultPaperSize",
          "defaultDiscount",
          "defaultShippingFee",
          "createdAt",
          "updatedAt"
        ]
      },
      "UpdateStoreDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Tên cửa hàng"
          },
          "address": {
            "type": "string",
            "description": "Địa chỉ"
          },
          "phone": {
            "type": "string",
            "description": "Số điện thoại"
          },
          "email": {
            "type": "string",
            "description": "Email"
          },
          "schemaName": {
            "type": "string",
            "description": "Tên schema database"
          },
          "managerUserId": {
            "type": "string",
            "description": "ID user quản lý"
          },
          "openingHours": {
            "type": "string",
            "description": "Giờ mở cửa"
          },
          "isActive": {
            "type": "boolean",
            "description": "Hoạt động"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Đã xóa mềm"
          },
          "bankId": {
            "type": "string",
            "description": "ID ngân hàng"
          },
          "accountNo": {
            "type": "string",
            "description": "Số tài khoản ngân hàng"
          },
          "accountName": {
            "type": "string",
            "description": "Tên chủ tài khoản"
          },
          "isVatEnabled": {
            "type": "boolean",
            "description": "Bật VAT"
          },
          "vatRate": {
            "type": "number",
            "description": "Tỷ lệ VAT (%)"
          },
          "invoiceFooter": {
            "type": "string",
            "description": "Chân trang hóa đơn"
          },
          "defaultPaperSize": {
            "type": "string",
            "description": "Khổ giấy in mặc định",
            "enum": [
              "k58",
              "k80",
              "a5"
            ]
          },
          "backupSchedule": {
            "type": "string",
            "description": "Lịch backup"
          },
          "defaultUnitId": {
            "type": "string",
            "description": "ID đơn vị tính mặc định"
          },
          "defaultDiscount": {
            "type": "number",
            "description": "Chiết khấu mặc định (%)"
          },
          "defaultShippingFee": {
            "type": "number",
            "description": "Phí ship mặc định"
          }
        }
      },
      "CreateProductDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "description": "Product ID"
          },
          "productCode": {
            "type": "string",
            "description": "Product code"
          },
          "name": {
            "type": "string",
            "description": "Product name",
            "maxLength": 255
          },
          "slug": {
            "type": "string",
            "description": "Product slug"
          },
          "description": {
            "type": "string",
            "description": "Product description"
          },
          "categoryId": {
            "type": "string",
            "description": "Category ID"
          },
          "brand": {
            "type": "string",
            "description": "Product brand"
          },
          "unitId": {
            "type": "string",
            "description": "Unit ID"
          },
          "priceRetail": {
            "type": "number",
            "description": "Retail price",
            "minimum": 0
          },
          "priceWholesale": {
            "type": "number",
            "description": "Wholesale price",
            "minimum": 0
          },
          "creditPrice": {
            "type": "number",
            "description": "Credit price",
            "minimum": 0
          },
          "costPrice": {
            "type": "number",
            "description": "Cost price",
            "minimum": 0
          },
          "barcode": {
            "type": "string",
            "description": "Product barcode"
          },
          "stock": {
            "type": "number",
            "description": "Stock quantity",
            "minimum": 0
          },
          "minStockLevel": {
            "type": "number",
            "description": "Minimum stock level",
            "minimum": 0
          },
          "images": {
            "type": "string",
            "description": "Product images (JSON string)"
          },
          "specs": {
            "type": "string",
            "description": "Product specifications (JSON string)"
          },
          "warrantyInfo": {
            "type": "string",
            "description": "Warranty information"
          },
          "supplierId": {
            "type": "string",
            "description": "Supplier ID"
          },
          "isActive": {
            "type": "boolean",
            "description": "Product active status"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Product deleted status"
          },
          "createdByUserId": {
            "type": "string",
            "description": "Created by user ID"
          },
          "updatedByUserId": {
            "type": "string",
            "description": "Updated by user ID"
          }
        },
        "required": [
          "productId",
          "productCode",
          "name",
          "slug",
          "description",
          "categoryId",
          "priceRetail",
          "stock",
          "minStockLevel",
          "isActive",
          "isDeleted"
        ]
      },
      "ProductResponseDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "description": "ID sản phẩm",
            "format": "uuid"
          },
          "productCode": {
            "type": "string",
            "description": "Mã sản phẩm (SKU)",
            "example": "SP001"
          },
          "name": {
            "type": "string",
            "description": "Tên sản phẩm",
            "example": "Phân bón hữu cơ"
          },
          "slug": {
            "type": "string",
            "description": "Slug SEO-friendly của sản phẩm",
            "example": "phan-bon-huu-co"
          },
          "description": {
            "type": "string",
            "description": "Mô tả chi tiết sản phẩm",
            "example": "Sản phẩm dùng cho cây trồng hữu cơ"
          },
          "categoryId": {
            "type": "string",
            "description": "ID danh mục sản phẩm",
            "format": "uuid"
          },
          "brand": {
            "type": "string",
            "description": "Thương hiệu của sản phẩm",
            "example": "NPK"
          },
          "unitId": {
            "type": "string",
            "description": "ID đơn vị tính",
            "format": "uuid"
          },
          "priceRetail": {
            "type": "number",
            "description": "Giá bán lẻ",
            "example": 120000
          },
          "priceWholesale": {
            "type": "number",
            "description": "Giá bán sỉ",
            "example": 110000
          },
          "creditPrice": {
            "type": "number",
            "description": "Giá bán trả góp (nếu có)",
            "example": 130000
          },
          "costPrice": {
            "type": "number",
            "description": "Giá vốn",
            "example": 100000
          },
          "barcode": {
            "type": "string",
            "description": "Barcode sản phẩm"
          },
          "stock": {
            "type": "number",
            "description": "Tồn kho",
            "example": 100
          },
          "minStockLevel": {
            "type": "number",
            "description": "Ngưỡng tồn kho",
            "example": 10
          },
          "images": {
            "type": "string",
            "description": "Hình ảnh (JSON/text)"
          },
          "specs": {
            "type": "string",
            "description": "Thông số kỹ thuật (JSON/text)"
          },
          "warrantyInfo": {
            "type": "string",
            "description": "Thông tin bảo hành"
          },
          "supplierId": {
            "type": "string",
            "description": "ID nhà cung cấp"
          },
          "isActive": {
            "type": "boolean",
            "description": "Trạng thái hoạt động"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Trạng thái xóa mềm"
          },
          "createdAt": {
            "type": "string",
            "description": "Thời gian tạo bản ghi",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "description": "Thời gian cập nhật gần nhất",
            "format": "date-time"
          },
          "createdByUserId": {
            "type": "string",
            "description": "Người tạo"
          },
          "updatedByUserId": {
            "type": "string",
            "description": "Người cập nhật cuối"
          }
        },
        "required": [
          "productId",
          "productCode",
          "name",
          "slug",
          "description",
          "categoryId",
          "priceRetail",
          "stock",
          "minStockLevel",
          "isActive",
          "isDeleted",
          "createdAt",
          "updatedAt"
        ]
      },
      "UpdateProductDto": {
        "type": "object",
        "properties": {}
      },
      "CreateCategoryDto": {
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "string",
            "description": "ID danh mục"
          },
          "name": {
            "type": "string",
            "description": "Tên danh mục"
          },
          "slug": {
            "type": "string",
            "description": "Slug"
          },
          "description": {
            "type": "string",
            "description": "Mô tả"
          },
          "parentId": {
            "type": "string",
            "description": "ID danh mục cha"
          },
          "image": {
            "type": "string",
            "description": "Hình ảnh"
          },
          "displayOrder": {
            "type": "number",
            "description": "Thứ tự hiển thị"
          },
          "isActive": {
            "type": "boolean",
            "description": "Hoạt động"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Đã xóa mềm"
          },
          "createdByUserId": {
            "type": "string",
            "description": "Người tạo"
          },
          "updatedByUserId": {
            "type": "string",
            "description": "Người cập nhật cuối"
          }
        },
        "required": [
          "categoryId",
          "name",
          "slug"
        ]
      },
      "CategoryResponseDto": {
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "string",
            "description": "ID danh mục"
          },
          "categoryName": {
            "type": "string",
            "description": "Tên danh mục"
          },
          "description": {
            "type": "string",
            "description": "Mô tả"
          },
          "parentId": {
            "type": "string",
            "description": "ID danh mục cha"
          },
          "isActive": {
            "type": "boolean",
            "description": "Hoạt động"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Đã xóa mềm"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Thời gian tạo"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Thời gian cập nhật"
          }
        },
        "required": [
          "categoryId",
          "categoryName",
          "isActive",
          "isDeleted",
          "createdAt",
          "updatedAt"
        ]
      },
      "UpdateCategoryDto": {
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "string",
            "description": "ID danh mục"
          },
          "name": {
            "type": "string",
            "description": "Tên danh mục"
          },
          "slug": {
            "type": "string",
            "description": "Slug"
          },
          "description": {
            "type": "string",
            "description": "Mô tả"
          },
          "parentId": {
            "type": "string",
            "description": "ID danh mục cha"
          },
          "image": {
            "type": "string",
            "description": "Hình ảnh"
          },
          "displayOrder": {
            "type": "number",
            "description": "Thứ tự hiển thị"
          },
          "isActive": {
            "type": "boolean",
            "description": "Hoạt động"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Đã xóa mềm"
          },
          "createdByUserId": {
            "type": "string",
            "description": "Người tạo"
          },
          "updatedByUserId": {
            "type": "string",
            "description": "Người cập nhật cuối"
          }
        }
      },
      "CreateCustomerDto": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string",
            "description": "ID khách hàng"
          },
          "name": {
            "type": "string",
            "description": "Tên khách hàng"
          },
          "phone": {
            "type": "string",
            "description": "Số điện thoại"
          },
          "email": {
            "type": "string",
            "description": "Email"
          },
          "address": {
            "type": "string",
            "description": "Địa chỉ"
          },
          "taxCode": {
            "type": "string",
            "description": "Mã số thuế"
          },
          "customerType": {
            "type": "string",
            "description": "Loại khách hàng",
            "enum": [
              "retail",
              "wholesale",
              "business",
              "vip"
            ],
            "default": "retail"
          },
          "gender": {
            "type": "string",
            "description": "Giới tính",
            "enum": [
              "male",
              "female",
              "other"
            ]
          },
          "birthday": {
            "type": "string",
            "description": "Ngày sinh"
          },
          "refCode": {
            "type": "string",
            "description": "Mã giới thiệu"
          },
          "note": {
            "type": "string",
            "description": "Ghi chú"
          },
          "creditLimit": {
            "type": "number",
            "description": "Hạn mức tín dụng"
          },
          "totalDebt": {
            "type": "number",
            "description": "Tổng nợ"
          },
          "debtDueDate": {
            "type": "string",
            "description": "Ngày đến hạn nợ"
          },
          "lastPurchaseDate": {
            "type": "string",
            "description": "Ngày mua cuối"
          },
          "status": {
            "type": "string",
            "description": "Trạng thái"
          },
          "isActive": {
            "type": "boolean",
            "description": "Hoạt động"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Đã xóa mềm"
          },
          "createdByUserId": {
            "type": "string",
            "description": "Người tạo"
          },
          "updatedByUserId": {
            "type": "string",
            "description": "Người cập nhật cuối"
          }
        },
        "required": [
          "customerId",
          "name",
          "customerType"
        ]
      },
      "CustomerResponseDto": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string",
            "description": "ID khách hàng"
          },
          "name": {
            "type": "string",
            "description": "Tên khách hàng"
          },
          "phone": {
            "type": "string",
            "description": "Số điện thoại"
          },
          "email": {
            "type": "string",
            "description": "Email"
          },
          "address": {
            "type": "string",
            "description": "Địa chỉ"
          },
          "taxCode": {
            "type": "string",
            "description": "Mã số thuế"
          },
          "customerType": {
            "type": "string",
            "description": "Loại khách hàng",
            "enum": [
              "retail",
              "wholesale",
              "business",
              "vip"
            ],
            "default": "retail"
          },
          "gender": {
            "type": "string",
            "description": "Giới tính",
            "enum": [
              "male",
              "female",
              "other"
            ]
          },
          "birthday": {
            "type": "string",
            "description": "Ngày sinh"
          },
          "refCode": {
            "type": "string",
            "description": "Mã giới thiệu"
          },
          "note": {
            "type": "string",
            "description": "Ghi chú"
          },
          "creditLimit": {
            "type": "number",
            "description": "Hạn mức tín dụng"
          },
          "totalDebt": {
            "type": "number",
            "description": "Tổng nợ"
          },
          "debtDueDate": {
            "type": "string",
            "description": "Ngày đến hạn nợ"
          },
          "lastPurchaseDate": {
            "type": "string",
            "description": "Ngày mua cuối"
          },
          "status": {
            "type": "string",
            "description": "Trạng thái"
          },
          "isActive": {
            "type": "boolean",
            "description": "Hoạt động"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Đã xóa mềm"
          },
          "createdByUserId": {
            "type": "string",
            "description": "Người tạo"
          },
          "updatedByUserId": {
            "type": "string",
            "description": "Người cập nhật cuối"
          },
          "createdAt": {
            "type": "string",
            "description": "Thời gian tạo",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "description": "Thời gian cập nhật",
            "format": "date-time"
          }
        },
        "required": [
          "createdAt",
          "updatedAt"
        ]
      },
      "UpdateCustomerDto": {
        "type": "object",
        "properties": {}
      },
      "CreateOrderDto": {
        "type": "object",
        "properties": {
          "orderCode": {
            "type": "string",
            "description": "Mã đơn hàng hiển thị (ví dụ: DH0001)"
          },
          "customerId": {
            "type": "string",
            "description": "ID khách hàng"
          },
          "totalAmount": {
            "type": "number",
            "description": "Tổng giá trị đơn hàng"
          },
          "discountAmount": {
            "type": "number",
            "description": "Chiết khấu"
          },
          "shippingFee": {
            "type": "number",
            "description": "Phí vận chuyển"
          },
          "vatPercent": {
            "type": "number",
            "description": "VAT (%)"
          },
          "vatAmount": {
            "type": "number",
            "description": "Tiền VAT"
          },
          "totalPaid": {
            "type": "number",
            "description": "Tổng đã thanh toán"
          },
          "paymentMethodId": {
            "type": "string",
            "description": "ID phương thức thanh toán"
          },
          "paymentDetails": {
            "type": "string",
            "description": "Chi tiết thanh toán"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "confirmed",
              "processing",
              "shipped",
              "delivered",
              "cancelled"
            ],
            "description": "Trạng thái đơn hàng"
          },
          "deliveryStatus": {
            "type": "string",
            "enum": [
              "processing",
              "shipped",
              "out_for_delivery",
              "delivered",
              "failed"
            ],
            "description": "Trạng thái giao hàng"
          },
          "expectedDeliveryDate": {
            "type": "string",
            "description": "Ngày giao hàng dự kiến",
            "format": "date-time"
          },
          "deliveryAddress": {
            "type": "string",
            "description": "Địa chỉ giao hàng"
          },
          "invoiceNumber": {
            "type": "string",
            "description": "Số hóa đơn"
          },
          "note": {
            "type": "string",
            "description": "Ghi chú đơn hàng"
          },
          "processedByUserId": {
            "type": "string",
            "description": "ID người xử lý đơn"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Đã xóa mềm"
          },
          "createdByUserId": {
            "type": "string",
            "description": "ID người tạo"
          }
        },
        "required": [
          "orderCode",
          "totalAmount",
          "deliveryAddress"
        ]
      },
      "OrderResponseDto": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "description": "ID đơn hàng (UUID)"
          },
          "orderCode": {
            "type": "string",
            "description": "Mã đơn hàng (ví dụ: DH-0001)"
          },
          "customerId": {
            "type": "string",
            "description": "ID khách hàng"
          },
          "totalAmount": {
            "type": "number",
            "description": "Tổng giá trị đơn hàng"
          },
          "discountAmount": {
            "type": "number",
            "description": "Chiết khấu"
          },
          "shippingFee": {
            "type": "number",
            "description": "Phí vận chuyển"
          },
          "vatPercent": {
            "type": "number",
            "description": "VAT (%)"
          },
          "vatAmount": {
            "type": "number",
            "description": "Tiền VAT"
          },
          "totalPaid": {
            "type": "number",
            "description": "Tổng đã thanh toán"
          },
          "paymentMethodId": {
            "type": "string",
            "description": "ID phương thức thanh toán"
          },
          "paymentDetails": {
            "type": "string",
            "description": "Chi tiết thanh toán"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "confirmed",
              "processing",
              "shipped",
              "delivered",
              "cancelled"
            ],
            "description": "Trạng thái đơn hàng"
          },
          "deliveryStatus": {
            "type": "string",
            "enum": [
              "processing",
              "shipped",
              "out_for_delivery",
              "delivered",
              "failed"
            ],
            "description": "Trạng thái giao hàng"
          },
          "expectedDeliveryDate": {
            "type": "string",
            "description": "Ngày giao hàng dự kiến",
            "format": "date-time"
          },
          "deliveryAddress": {
            "type": "string",
            "description": "Địa chỉ giao hàng"
          },
          "invoiceNumber": {
            "type": "string",
            "description": "Số hóa đơn"
          },
          "note": {
            "type": "string",
            "description": "Ghi chú đơn hàng"
          },
          "processedByUserId": {
            "type": "string",
            "description": "ID người xử lý đơn"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Đã xóa mềm"
          },
          "createdAt": {
            "type": "string",
            "description": "Thời gian tạo đơn hàng",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "description": "Thời gian cập nhật cuối",
            "format": "date-time"
          }
        },
        "required": [
          "orderId",
          "orderCode",
          "totalAmount",
          "status",
          "deliveryStatus",
          "deliveryAddress",
          "isDeleted",
          "createdAt",
          "updatedAt"
        ]
      },
      "OrderItemDto": {
        "type": "object",
        "properties": {
          "product_id": {
            "type": "string",
            "description": "ID sản phẩm"
          },
          "product_name": {
            "type": "string",
            "description": "Tên sản phẩm"
          },
          "product_unit_id": {
            "type": "string",
            "description": "ID đơn vị sản phẩm"
          },
          "quantity": {
            "type": "number",
            "description": "Số lượng"
          },
          "unit_price": {
            "type": "number",
            "description": "Đơn giá"
          }
        },
        "required": [
          "product_id",
          "product_name",
          "quantity",
          "unit_price"
        ]
      },
      "CreateOrderAtomicDto": {
        "type": "object",
        "properties": {
          "orderCode": {
            "type": "string",
            "description": "Mã đơn hàng hiển thị (ví dụ: DH0001)"
          },
          "customerId": {
            "type": "string",
            "description": "ID khách hàng"
          },
          "totalAmount": {
            "type": "number",
            "description": "Tổng giá trị đơn hàng"
          },
          "discountAmount": {
            "type": "number",
            "description": "Chiết khấu"
          },
          "shippingFee": {
            "type": "number",
            "description": "Phí vận chuyển"
          },
          "vatPercent": {
            "type": "number",
            "description": "VAT (%)"
          },
          "vatAmount": {
            "type": "number",
            "description": "Tiền VAT"
          },
          "totalPaid": {
            "type": "number",
            "description": "Tổng đã thanh toán"
          },
          "paymentMethodId": {
            "type": "string",
            "description": "ID phương thức thanh toán"
          },
          "paymentDetails": {
            "type": "string",
            "description": "Chi tiết thanh toán"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "confirmed",
              "processing",
              "shipped",
              "delivered",
              "cancelled"
            ],
            "description": "Trạng thái đơn hàng"
          },
          "expectedDeliveryDate": {
            "type": "string",
            "description": "Ngày giao hàng dự kiến"
          },
          "deliveryAddress": {
            "type": "string",
            "description": "Địa chỉ giao hàng"
          },
          "deliveryStatus": {
            "type": "string",
            "enum": [
              "processing",
              "shipped",
              "out_for_delivery",
              "delivered",
              "failed"
            ],
            "description": "Trạng thái giao hàng"
          },
          "notes": {
            "type": "string",
            "description": "Ghi chú"
          },
          "paymentStatus": {
            "type": "string",
            "description": "Trạng thái thanh toán"
          },
          "isActive": {
            "type": "boolean",
            "description": "Trạng thái hoạt động"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Trạng thái xóa mềm"
          },
          "orderItems": {
            "description": "Danh sách sản phẩm trong đơn hàng",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemDto"
            }
          }
        },
        "required": [
          "orderCode",
          "totalAmount",
          "paymentMethodId",
          "deliveryAddress",
          "orderItems"
        ]
      },
      "UpdateOrderDto": {
        "type": "object",
        "properties": {
          "orderCode": {
            "type": "string",
            "description": "Mã đơn hàng hiển thị (ví dụ: DH0001)"
          },
          "customerId": {
            "type": "string",
            "description": "ID khách hàng"
          },
          "totalAmount": {
            "type": "number",
            "description": "Tổng giá trị đơn hàng"
          },
          "discountAmount": {
            "type": "number",
            "description": "Chiết khấu"
          },
          "shippingFee": {
            "type": "number",
            "description": "Phí vận chuyển"
          },
          "vatPercent": {
            "type": "number",
            "description": "VAT (%)"
          },
          "vatAmount": {
            "type": "number",
            "description": "Tiền VAT"
          },
          "totalPaid": {
            "type": "number",
            "description": "Tổng đã thanh toán"
          },
          "paymentMethodId": {
            "type": "string",
            "description": "ID phương thức thanh toán"
          },
          "paymentDetails": {
            "type": "string",
            "description": "Chi tiết thanh toán"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "confirmed",
              "processing",
              "shipped",
              "delivered",
              "cancelled"
            ],
            "description": "Trạng thái đơn hàng"
          },
          "deliveryStatus": {
            "type": "string",
            "enum": [
              "processing",
              "shipped",
              "out_for_delivery",
              "delivered",
              "failed"
            ],
            "description": "Trạng thái giao hàng"
          },
          "expectedDeliveryDate": {
            "type": "string",
            "description": "Ngày giao hàng dự kiến",
            "format": "date-time"
          },
          "deliveryAddress": {
            "type": "string",
            "description": "Địa chỉ giao hàng"
          },
          "invoiceNumber": {
            "type": "string",
            "description": "Số hóa đơn"
          },
          "note": {
            "type": "string",
            "description": "Ghi chú đơn hàng"
          },
          "processedByUserId": {
            "type": "string",
            "description": "ID người xử lý đơn"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Đã xóa mềm"
          },
          "createdByUserId": {
            "type": "string",
            "description": "ID người tạo"
          }
        }
      },
      "CreateOrderItemDto": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "description": "ID của đơn hàng"
          },
          "productId": {
            "type": "string",
            "description": "ID của sản phẩm"
          },
          "productName": {
            "type": "string",
            "description": "Tên sản phẩm tại thời điểm đặt hàng"
          },
          "productUnitId": {
            "type": "string",
            "description": "ID đơn vị tính sản phẩm"
          },
          "quantity": {
            "type": "number",
            "description": "Số lượng sản phẩm đặt"
          },
          "unitPrice": {
            "type": "number",
            "description": "Đơn giá"
          },
          "totalPrice": {
            "type": "number",
            "description": "Thành tiền"
          },
          "note": {
            "type": "string",
            "description": "Ghi chú cho sản phẩm trong đơn hàng"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Đã xóa mềm"
          },
          "createdByUserId": {
            "type": "string",
            "description": "Người tạo"
          },
          "updatedByUserId": {
            "type": "string",
            "description": "Người cập nhật cuối"
          }
        },
        "required": [
          "orderId",
          "productId",
          "productName",
          "quantity",
          "unitPrice",
          "totalPrice"
        ]
      },
      "OrderItemResponseDto": {
        "type": "object",
        "properties": {
          "orderItemId": {
            "type": "string",
            "description": "ID của sản phẩm trong đơn hàng"
          },
          "orderId": {
            "type": "string",
            "description": "ID đơn hàng"
          },
          "productId": {
            "type": "string",
            "description": "ID sản phẩm"
          },
          "productName": {
            "type": "string",
            "description": "Tên sản phẩm"
          },
          "productUnitId": {
            "type": "string",
            "description": "ID đơn vị tính sản phẩm"
          },
          "quantity": {
            "type": "number",
            "description": "Số lượng sản phẩm"
          },
          "unitPrice": {
            "type": "number",
            "description": "Đơn giá"
          },
          "totalPrice": {
            "type": "number",
            "description": "Thành tiền"
          },
          "note": {
            "type": "string",
            "description": "Ghi chú (nếu có)"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Đã xóa mềm"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Thời điểm tạo"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Thời điểm cập nhật gần nhất"
          },
          "createdByUserId": {
            "type": "string",
            "description": "Người tạo"
          },
          "updatedByUserId": {
            "type": "string",
            "description": "Người cập nhật cuối"
          }
        },
        "required": [
          "orderItemId",
          "orderId",
          "productId",
          "productName",
          "quantity",
          "unitPrice",
          "totalPrice",
          "isDeleted",
          "createdAt",
          "updatedAt"
        ]
      },
      "UpdateOrderItemDto": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "description": "ID của đơn hàng"
          },
          "productId": {
            "type": "string",
            "description": "ID của sản phẩm"
          },
          "productName": {
            "type": "string",
            "description": "Tên sản phẩm tại thời điểm đặt hàng"
          },
          "productUnitId": {
            "type": "string",
            "description": "ID đơn vị tính sản phẩm"
          },
          "quantity": {
            "type": "number",
            "description": "Số lượng sản phẩm đặt"
          },
          "unitPrice": {
            "type": "number",
            "description": "Đơn giá"
          },
          "totalPrice": {
            "type": "number",
            "description": "Thành tiền"
          },
          "note": {
            "type": "string",
            "description": "Ghi chú cho sản phẩm trong đơn hàng"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Đã xóa mềm"
          },
          "createdByUserId": {
            "type": "string",
            "description": "Người tạo"
          },
          "updatedByUserId": {
            "type": "string",
            "description": "Người cập nhật cuối"
          }
        }
      },
      "CreatePaymentDto": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "description": "ID đơn hàng"
          },
          "amount": {
            "type": "string",
            "description": "Số tiền thanh toán"
          },
          "paidAt": {
            "format": "date-time",
            "type": "string",
            "description": "Thời điểm đã thanh toán"
          },
          "paymentMethodId": {
            "type": "string",
            "description": "ID phương thức thanh toán"
          },
          "status": {
            "type": "string",
            "enum": [
              "unpaid",
              "paid",
              "late",
              "refund",
              "canceled"
            ],
            "description": "Trạng thái thanh toán"
          },
          "note": {
            "type": "string",
            "description": "Ghi chú"
          },
          "paidByUserId": {
            "type": "string",
            "description": "ID người thanh toán"
          }
        },
        "required": [
          "orderId",
          "amount",
          "paymentMethodId",
          "status"
        ]
      },
      "UpdatePaymentDto": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "description": "ID đơn hàng"
          },
          "amount": {
            "type": "string",
            "description": "Số tiền thanh toán (dạng chuỗi)"
          },
          "paidAt": {
            "type": "string",
            "description": "Thời điểm đã thanh toán",
            "format": "date-time"
          },
          "paymentMethodId": {
            "type": "string",
            "description": "Phương thức thanh toán",
            "format": "uuid"
          },
          "status": {
            "type": "string",
            "enum": [
              "unpaid",
              "paid",
              "late",
              "refund",
              "canceled"
            ],
            "description": "Trạng thái thanh toán"
          },
          "note": {
            "type": "string",
            "description": "Ghi chú"
          },
          "paidByUserId": {
            "type": "string",
            "description": "ID người thanh toán"
          }
        }
      },
      "CreateVoucherDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Voucher name"
          },
          "description": {
            "type": "string",
            "description": "Voucher description"
          },
          "pointsCost": {
            "type": "number",
            "description": "Points cost for the voucher"
          },
          "value": {
            "type": "string",
            "description": "Voucher value"
          },
          "type": {
            "type": "string",
            "description": "Voucher type (fixed, percentage, shipping)"
          },
          "createdByUserId": {
            "type": "string",
            "description": "Created by user ID"
          },
          "updatedByUserId": {
            "type": "string",
            "description": "Updated by user ID"
          }
        },
        "required": [
          "name",
          "pointsCost",
          "value",
          "type",
          "createdByUserId"
        ]
      },
      "VoucherResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Voucher ID"
          },
          "code": {
            "type": "string",
            "description": "Voucher code"
          },
          "discountValue": {
            "type": "number",
            "description": "Discount value"
          },
          "startDate": {
            "type": "string",
            "description": "Start date"
          },
          "endDate": {
            "type": "string",
            "description": "End date"
          },
          "createdAt": {
            "type": "string",
            "description": "Created at timestamp"
          },
          "updatedAt": {
            "type": "string",
            "description": "Updated at timestamp"
          }
        },
        "required": [
          "id",
          "code",
          "createdAt",
          "updatedAt"
        ]
      },
      "UpdateVoucherDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Voucher name"
          },
          "description": {
            "type": "string",
            "description": "Voucher description"
          },
          "pointsCost": {
            "type": "number",
            "description": "Points cost for the voucher"
          },
          "value": {
            "type": "string",
            "description": "Voucher value"
          },
          "type": {
            "type": "string",
            "description": "Voucher type (fixed, percentage, shipping)"
          },
          "createdByUserId": {
            "type": "string",
            "description": "Created by user ID"
          },
          "updatedByUserId": {
            "type": "string",
            "description": "Updated by user ID"
          }
        }
      },
      "CreateSupplierDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID nhà cung cấp"
          },
          "name": {
            "type": "string",
            "description": "Tên nhà cung cấp"
          },
          "phone": {
            "type": "string",
            "description": "Số điện thoại"
          },
          "email": {
            "type": "string",
            "description": "Email"
          },
          "address": {
            "type": "string",
            "description": "Địa chỉ"
          },
          "taxCode": {
            "type": "string",
            "description": "Mã số thuế"
          },
          "contactPerson": {
            "type": "string",
            "description": "Người liên hệ"
          },
          "note": {
            "type": "string",
            "description": "Ghi chú"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Đã xóa mềm"
          },
          "createdByUserId": {
            "type": "string",
            "description": "Người tạo"
          },
          "updatedByUserId": {
            "type": "string",
            "description": "Người cập nhật cuối"
          }
        },
        "required": [
          "name"
        ]
      },
      "UpdateSupplierDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID nhà cung cấp"
          },
          "name": {
            "type": "string",
            "description": "Tên nhà cung cấp"
          },
          "phone": {
            "type": "string",
            "description": "Số điện thoại"
          },
          "email": {
            "type": "string",
            "description": "Email"
          },
          "address": {
            "type": "string",
            "description": "Địa chỉ"
          },
          "taxCode": {
            "type": "string",
            "description": "Mã số thuế"
          },
          "contactPerson": {
            "type": "string",
            "description": "Người liên hệ"
          },
          "note": {
            "type": "string",
            "description": "Ghi chú"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Đã xóa mềm"
          },
          "createdByUserId": {
            "type": "string",
            "description": "Người tạo"
          },
          "updatedByUserId": {
            "type": "string",
            "description": "Người cập nhật cuối"
          }
        }
      },
      "CreateDispatchOrderDto": {
        "type": "object",
        "properties": {
          "dispatchCode": {
            "type": "string"
          },
          "purpose": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "completed",
              "cancelled"
            ],
            "default": "pending"
          },
          "createdByUserId": {
            "type": "string"
          }
        },
        "required": [
          "dispatchCode",
          "status",
          "createdByUserId"
        ]
      },
      "UpdateDispatchOrderDto": {
        "type": "object",
        "properties": {
          "dispatchCode": {
            "type": "string"
          },
          "purpose": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "completed",
              "cancelled"
            ],
            "default": "pending"
          },
          "createdByUserId": {
            "type": "string"
          }
        }
      },
      "CreateReturnOrderDto": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "returnDate": {
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "completed",
              "cancelled"
            ]
          }
        },
        "required": [
          "orderId",
          "customerId",
          "returnDate",
          "status"
        ]
      },
      "UpdateReturnOrderDto": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "returnDate": {
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "completed",
              "cancelled"
            ]
          }
        }
      },
      "CreateStockAdjustmentDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "description": "Product ID"
          },
          "adjustmentType": {
            "type": "string",
            "description": "Adjustment type (increase, decrease)"
          },
          "quantityChange": {
            "type": "number",
            "description": "Quantity change"
          },
          "reason": {
            "type": "string",
            "description": "Reason for adjustment"
          },
          "status": {
            "type": "string",
            "description": "Status of adjustment",
            "enum": [
              "pending",
              "completed",
              "cancelled"
            ],
            "default": "pending"
          },
          "adjustedByUserId": {
            "type": "string",
            "description": "User ID who made the adjustment"
          }
        },
        "required": [
          "productId",
          "adjustmentType",
          "quantityChange",
          "status",
          "adjustedByUserId"
        ]
      },
      "UpdateStockAdjustmentDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "description": "Product ID"
          },
          "adjustmentType": {
            "type": "string",
            "description": "Adjustment type (increase, decrease)"
          },
          "quantityChange": {
            "type": "number",
            "description": "Quantity change"
          },
          "reason": {
            "type": "string",
            "description": "Reason for adjustment"
          },
          "status": {
            "type": "string",
            "description": "Status of adjustment",
            "enum": [
              "pending",
              "completed",
              "cancelled"
            ],
            "default": "pending"
          },
          "adjustedByUserId": {
            "type": "string",
            "description": "User ID who made the adjustment"
          }
        }
      },
      "CreateInventoryTransferDto": {
        "type": "object",
        "properties": {
          "sourceStoreId": {
            "type": "string",
            "description": "ID của cửa hàng chuyển hàng (source)"
          },
          "targetStoreId": {
            "type": "string",
            "description": "ID của cửa hàng nhận hàng (target)"
          },
          "transferCode": {
            "type": "string",
            "description": "Mã phiếu chuyển kho (transfer code)"
          },
          "note": {
            "type": "string",
            "description": "Ghi chú nếu có"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "completed",
              "cancelled"
            ],
            "default": "pending",
            "description": "Trạng thái chuyển kho"
          },
          "createdByUserId": {
            "type": "string",
            "description": "ID người tạo"
          },
          "approvedByUserId": {
            "type": "string",
            "description": "ID người duyệt"
          },
          "receivedByUserId": {
            "type": "string",
            "description": "ID người nhận hàng"
          }
        },
        "required": [
          "sourceStoreId",
          "targetStoreId",
          "transferCode",
          "status"
        ]
      },
      "InventoryTransferResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID của phiếu chuyển kho"
          },
          "sourceStoreId": {
            "type": "string",
            "description": "ID cửa hàng chuyển"
          },
          "targetStoreId": {
            "type": "string",
            "description": "ID cửa hàng nhận"
          },
          "transferCode": {
            "type": "string",
            "description": "Mã chuyển kho"
          },
          "note": {
            "type": "string",
            "description": "Ghi chú nếu có"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "completed",
              "cancelled"
            ],
            "description": "Trạng thái phiếu chuyển kho"
          },
          "createdByUserId": {
            "type": "string",
            "description": "ID người tạo"
          },
          "approvedByUserId": {
            "type": "string",
            "description": "ID người duyệt"
          },
          "receivedByUserId": {
            "type": "string",
            "description": "ID người nhận hàng"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Thời gian tạo"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Thời gian cập nhật gần nhất"
          }
        },
        "required": [
          "id",
          "sourceStoreId",
          "targetStoreId",
          "transferCode",
          "status",
          "createdAt",
          "updatedAt"
        ]
      },
      "UpdateInventoryTransferDto": {
        "type": "object",
        "properties": {
          "sourceStoreId": {
            "type": "string",
            "description": "ID của cửa hàng chuyển hàng (source)"
          },
          "targetStoreId": {
            "type": "string",
            "description": "ID của cửa hàng nhận hàng (target)"
          },
          "transferCode": {
            "type": "string",
            "description": "Mã phiếu chuyển kho (transfer code)"
          },
          "note": {
            "type": "string",
            "description": "Ghi chú nếu có"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "completed",
              "cancelled"
            ],
            "default": "pending",
            "description": "Trạng thái chuyển kho"
          },
          "createdByUserId": {
            "type": "string",
            "description": "ID người tạo"
          },
          "approvedByUserId": {
            "type": "string",
            "description": "ID người duyệt"
          },
          "receivedByUserId": {
            "type": "string",
            "description": "ID người nhận hàng"
          }
        }
      },
      "CreatePriceHistoryDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string"
          },
          "oldPrice": {
            "type": "number"
          },
          "newPrice": {
            "type": "number"
          },
          "changedByUserId": {
            "type": "string"
          },
          "createdByUserId": {
            "type": "string"
          },
          "updatedByUserId": {
            "type": "string"
          }
        },
        "required": [
          "productId",
          "oldPrice",
          "newPrice"
        ]
      },
      "PriceHistoryResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          },
          "oldPrice": {
            "type": "number"
          },
          "newPrice": {
            "type": "number"
          },
          "changedByUserId": {
            "type": "string"
          },
          "changedAt": {
            "format": "date-time",
            "type": "string"
          },
          "createdByUserId": {
            "type": "string"
          },
          "updatedByUserId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "productId",
          "oldPrice",
          "newPrice",
          "changedAt"
        ]
      },
      "UpdatePriceHistoryDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string"
          },
          "oldPrice": {
            "type": "number"
          },
          "newPrice": {
            "type": "number"
          },
          "changedByUserId": {
            "type": "string"
          },
          "createdByUserId": {
            "type": "string"
          },
          "updatedByUserId": {
            "type": "string"
          }
        }
      },
      "CreatePromotionDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Promotion name"
          },
          "type": {
            "type": "string",
            "description": "Promotion type (percentage, fixed, bogo)"
          },
          "value": {
            "type": "string",
            "description": "Promotion value"
          },
          "appliesTo": {
            "type": "string",
            "description": "Applies to (all, category, product)"
          },
          "startDate": {
            "type": "string",
            "description": "Start date"
          },
          "endDate": {
            "type": "string",
            "description": "End date"
          },
          "isActive": {
            "type": "boolean",
            "description": "Is active",
            "default": true
          },
          "createdByUserId": {
            "type": "string",
            "description": "Created by user ID"
          },
          "updatedByUserId": {
            "type": "string",
            "description": "Updated by user ID"
          }
        },
        "required": [
          "name",
          "type",
          "value",
          "appliesTo",
          "startDate",
          "endDate",
          "isActive",
          "createdByUserId"
        ]
      },
      "UpdatePromotionDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Promotion name"
          },
          "type": {
            "type": "string",
            "description": "Promotion type (percentage, fixed, bogo)"
          },
          "value": {
            "type": "string",
            "description": "Promotion value"
          },
          "appliesTo": {
            "type": "string",
            "description": "Applies to (all, category, product)"
          },
          "startDate": {
            "type": "string",
            "description": "Start date"
          },
          "endDate": {
            "type": "string",
            "description": "End date"
          },
          "isActive": {
            "type": "boolean",
            "description": "Is active",
            "default": true
          },
          "createdByUserId": {
            "type": "string",
            "description": "Created by user ID"
          },
          "updatedByUserId": {
            "type": "string",
            "description": "Updated by user ID"
          }
        }
      },
      "CreateInstallmentDto": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "description": "Order ID"
          },
          "installmentNumber": {
            "type": "number",
            "description": "Installment number"
          },
          "dueDate": {
            "type": "string",
            "description": "Due date"
          },
          "amount": {
            "type": "string",
            "description": "Amount"
          },
          "paymentMethodId": {
            "type": "string",
            "description": "Payment method ID"
          },
          "status": {
            "type": "string",
            "description": "Status",
            "enum": [
              "unpaid",
              "paid",
              "late"
            ],
            "default": "unpaid"
          },
          "note": {
            "type": "string",
            "description": "Note"
          },
          "collectedByUserId": {
            "type": "string",
            "description": "Collected by user ID"
          }
        },
        "required": [
          "orderId",
          "installmentNumber",
          "dueDate",
          "amount",
          "status"
        ]
      },
      "InstallmentResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Installment ID"
          },
          "orderId": {
            "type": "string",
            "description": "Order ID"
          },
          "installmentNumber": {
            "type": "number",
            "description": "Installment number"
          },
          "dueDate": {
            "format": "date-time",
            "type": "string",
            "description": "Due date"
          },
          "amount": {
            "type": "string",
            "description": "Amount"
          },
          "paymentMethodId": {
            "type": "string",
            "description": "Payment method ID"
          },
          "status": {
            "type": "string",
            "description": "Status",
            "enum": [
              "unpaid",
              "paid",
              "late"
            ]
          },
          "note": {
            "type": "string",
            "description": "Note"
          },
          "collectedByUserId": {
            "type": "string",
            "description": "Collected by user ID"
          },
          "paidAt": {
            "format": "date-time",
            "type": "string",
            "description": "Paid at"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Created at"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Updated at"
          }
        },
        "required": [
          "id",
          "orderId",
          "installmentNumber",
          "dueDate",
          "amount",
          "status",
          "createdAt",
          "updatedAt"
        ]
      },
      "UpdateInstallmentDto": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "description": "Order ID"
          },
          "installmentNumber": {
            "type": "number",
            "description": "Installment number"
          },
          "dueDate": {
            "type": "string",
            "description": "Due date"
          },
          "amount": {
            "type": "string",
            "description": "Amount"
          },
          "paymentMethodId": {
            "type": "string",
            "description": "Payment method ID"
          },
          "status": {
            "type": "string",
            "description": "Status",
            "enum": [
              "unpaid",
              "paid",
              "late"
            ],
            "default": "unpaid"
          },
          "note": {
            "type": "string",
            "description": "Note"
          },
          "collectedByUserId": {
            "type": "string",
            "description": "Collected by user ID"
          }
        }
      },
      "CreateDebtTransactionDto": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string",
            "description": "Customer ID"
          },
          "amount": {
            "type": "string",
            "description": "Amount"
          },
          "paymentMethodId": {
            "type": "string",
            "description": "Payment method ID"
          },
          "paidByUserId": {
            "type": "string",
            "description": "Paid by user ID"
          },
          "paidAt": {
            "type": "string",
            "description": "Paid at"
          },
          "status": {
            "type": "string",
            "description": "Status",
            "enum": [
              "pending",
              "paid",
              "cancelled",
              "overdue"
            ],
            "default": "pending"
          },
          "note": {
            "type": "string",
            "description": "Note"
          }
        },
        "required": [
          "customerId",
          "amount",
          "paymentMethodId",
          "paidByUserId",
          "paidAt",
          "status"
        ]
      },
      "UpdateDebtTransactionDto": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string",
            "description": "Customer ID"
          },
          "amount": {
            "type": "string",
            "description": "Amount"
          },
          "paymentMethodId": {
            "type": "string",
            "description": "Payment method ID"
          },
          "paidByUserId": {
            "type": "string",
            "description": "Paid by user ID"
          },
          "paidAt": {
            "type": "string",
            "description": "Paid at"
          },
          "status": {
            "type": "string",
            "description": "Status",
            "enum": [
              "pending",
              "paid",
              "cancelled",
              "overdue"
            ],
            "default": "pending"
          },
          "note": {
            "type": "string",
            "description": "Note"
          }
        }
      },
      "CreateLoyaltyPointLogDto": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string",
            "description": "ID của khách hàng liên quan đến điểm thưởng"
          },
          "orderId": {
            "type": "string",
            "description": "ID đơn hàng nếu điểm phát sinh từ giao dịch"
          },
          "change": {
            "type": "number",
            "description": "Số điểm thay đổi (có thể âm hoặc dương)"
          },
          "reason": {
            "type": "string",
            "description": "Lý do thay đổi điểm"
          },
          "createdByUserId": {
            "type": "string",
            "description": "ID người tạo (nếu có)"
          },
          "updatedByUserId": {
            "type": "string",
            "description": "ID người chỉnh sửa gần nhất (nếu có)"
          }
        },
        "required": [
          "customerId",
          "change"
        ]
      },
      "LoyaltyPointLogResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID của bản ghi log điểm thưởng"
          },
          "customerId": {
            "type": "string",
            "description": "ID của khách hàng nhận hoặc bị trừ điểm"
          },
          "orderId": {
            "type": "string",
            "description": "ID đơn hàng liên quan đến điểm thưởng (nếu có)"
          },
          "change": {
            "type": "number",
            "description": "Số điểm thay đổi (có thể là cộng hoặc trừ)"
          },
          "reason": {
            "type": "string",
            "description": "Lý do thay đổi điểm thưởng"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Thời điểm tạo bản ghi"
          },
          "createdByUserId": {
            "type": "string",
            "description": "ID người tạo bản ghi (nếu có)"
          },
          "updatedByUserId": {
            "type": "string",
            "description": "ID người cập nhật gần nhất (nếu có)"
          }
        },
        "required": [
          "id",
          "customerId",
          "change",
          "createdAt"
        ]
      },
      "UpdateLoyaltyPointLogDto": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string",
            "description": "ID của khách hàng liên quan đến điểm thưởng"
          },
          "orderId": {
            "type": "string",
            "description": "ID đơn hàng nếu điểm phát sinh từ giao dịch"
          },
          "change": {
            "type": "number",
            "description": "Số điểm thay đổi (có thể âm hoặc dương)"
          },
          "reason": {
            "type": "string",
            "description": "Lý do thay đổi điểm"
          },
          "createdByUserId": {
            "type": "string",
            "description": "ID người tạo (nếu có)"
          },
          "updatedByUserId": {
            "type": "string",
            "description": "ID người chỉnh sửa gần nhất (nếu có)"
          }
        }
      },
      "CreateJobScheduleDto": {
        "type": "object",
        "properties": {
          "storeId": {
            "type": "string",
            "description": "Store ID"
          },
          "jobName": {
            "type": "string",
            "description": "Job name"
          },
          "schedule": {
            "type": "string",
            "description": "Schedule (cron expression)"
          },
          "lastRunAt": {
            "type": "string",
            "description": "Last run at"
          },
          "nextRunAt": {
            "type": "string",
            "description": "Next run at"
          },
          "status": {
            "type": "string",
            "description": "Status",
            "enum": [
              "scheduled",
              "running",
              "completed",
              "failed",
              "ACTIVE"
            ],
            "default": "scheduled"
          },
          "note": {
            "type": "string",
            "description": "Note"
          },
          "createdByUserId": {
            "type": "string",
            "description": "Created by user ID"
          },
          "updatedByUserId": {
            "type": "string",
            "description": "Updated by user ID"
          }
        },
        "required": [
          "storeId",
          "jobName",
          "schedule",
          "status",
          "createdByUserId"
        ]
      },
      "JobScheduleResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Job schedule ID"
          },
          "storeId": {
            "type": "string",
            "description": "Store ID"
          },
          "jobName": {
            "type": "string",
            "description": "Job name"
          },
          "schedule": {
            "type": "string",
            "description": "Schedule (cron expression)"
          },
          "lastRunAt": {
            "format": "date-time",
            "type": "string",
            "description": "Last run at"
          },
          "nextRunAt": {
            "format": "date-time",
            "type": "string",
            "description": "Next run at"
          },
          "status": {
            "type": "string",
            "description": "Status",
            "enum": [
              "scheduled",
              "running",
              "completed",
              "failed",
              "ACTIVE"
            ]
          },
          "note": {
            "type": "string",
            "description": "Note"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Created at"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Updated at"
          },
          "createdByUserId": {
            "type": "string",
            "description": "Created by user ID"
          },
          "updatedByUserId": {
            "type": "string",
            "description": "Updated by user ID"
          }
        },
        "required": [
          "id",
          "storeId",
          "jobName",
          "schedule",
          "status",
          "createdAt",
          "updatedAt",
          "createdByUserId"
        ]
      },
      "UpdateJobScheduleDto": {
        "type": "object",
        "properties": {
          "storeId": {
            "type": "string",
            "description": "Store ID"
          },
          "jobName": {
            "type": "string",
            "description": "Job name"
          },
          "schedule": {
            "type": "string",
            "description": "Schedule (cron expression)"
          },
          "lastRunAt": {
            "type": "string",
            "description": "Last run at"
          },
          "nextRunAt": {
            "type": "string",
            "description": "Next run at"
          },
          "status": {
            "type": "string",
            "description": "Status",
            "enum": [
              "scheduled",
              "running",
              "completed",
              "failed",
              "ACTIVE"
            ],
            "default": "scheduled"
          },
          "note": {
            "type": "string",
            "description": "Note"
          },
          "createdByUserId": {
            "type": "string",
            "description": "Created by user ID"
          },
          "updatedByUserId": {
            "type": "string",
            "description": "Updated by user ID"
          }
        }
      },
      "CreateWebhookLogDto": {
        "type": "object",
        "properties": {
          "storeId": {
            "type": "string",
            "description": "Store ID"
          },
          "eventType": {
            "type": "string",
            "description": "Event type"
          },
          "requestPayload": {
            "type": "string",
            "description": "Request payload"
          },
          "responsePayload": {
            "type": "string",
            "description": "Response payload"
          },
          "statusCode": {
            "type": "number",
            "description": "Status code"
          },
          "errorMessage": {
            "type": "string",
            "description": "Error message"
          },
          "isSuccess": {
            "type": "boolean",
            "description": "Is success"
          },
          "retryCount": {
            "type": "number",
            "description": "Retry count"
          },
          "nextRetryAt": {
            "type": "string",
            "description": "Next retry at"
          },
          "payload": {
            "type": "string",
            "description": "Payload"
          },
          "type": {
            "type": "string",
            "description": "Webhook type (outgoing/incoming)"
          }
        },
        "required": [
          "storeId",
          "eventType",
          "isSuccess"
        ]
      },
      "UpdateWebhookLogDto": {
        "type": "object",
        "properties": {
          "storeId": {
            "type": "string",
            "description": "Store ID"
          },
          "eventType": {
            "type": "string",
            "description": "Event type"
          },
          "requestPayload": {
            "type": "string",
            "description": "Request payload"
          },
          "responsePayload": {
            "type": "string",
            "description": "Response payload"
          },
          "statusCode": {
            "type": "number",
            "description": "Status code"
          },
          "errorMessage": {
            "type": "string",
            "description": "Error message"
          },
          "isSuccess": {
            "type": "boolean",
            "description": "Is success"
          },
          "retryCount": {
            "type": "number",
            "description": "Retry count"
          },
          "nextRetryAt": {
            "type": "string",
            "description": "Next retry at"
          },
          "payload": {
            "type": "string",
            "description": "Payload"
          },
          "type": {
            "type": "string",
            "description": "Webhook type (outgoing/incoming)"
          }
        }
      },
      "CreateExternalSystemLogDto": {
        "type": "object",
        "properties": {
          "storeId": {
            "type": "string"
          },
          "systemName": {
            "type": "string"
          },
          "requestPayload": {
            "type": "object"
          },
          "responsePayload": {
            "type": "object"
          },
          "httpMethod": {
            "type": "string"
          },
          "endpoint": {
            "type": "string"
          },
          "statusCode": {
            "type": "number"
          },
          "isSuccess": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string"
          }
        },
        "required": [
          "storeId",
          "systemName",
          "endpoint",
          "isSuccess"
        ]
      },
      "UpdateExternalSystemLogDto": {
        "type": "object",
        "properties": {
          "storeId": {
            "type": "string"
          },
          "systemName": {
            "type": "string"
          },
          "requestPayload": {
            "type": "object"
          },
          "responsePayload": {
            "type": "object"
          },
          "httpMethod": {
            "type": "string"
          },
          "endpoint": {
            "type": "string"
          },
          "statusCode": {
            "type": "number"
          },
          "isSuccess": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string"
          }
        }
      },
      "CreateFileAttachmentDto": {
        "type": "object",
        "properties": {
          "entityType": {
            "type": "string"
          },
          "entityId": {
            "type": "string"
          },
          "fileUrl": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "uploadedByUserId": {
            "type": "string"
          },
          "createdByUserId": {
            "type": "string"
          },
          "updatedByUserId": {
            "type": "string"
          }
        },
        "required": [
          "entityType",
          "entityId",
          "fileUrl"
        ]
      },
      "FileAttachmentResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the file attachment"
          },
          "entityType": {
            "type": "string",
            "description": "Type of entity this file is attached to"
          },
          "entityId": {
            "type": "string",
            "description": "ID of the entity this file is attached to"
          },
          "fileUrl": {
            "type": "string",
            "description": "URL to access the file"
          },
          "uploadedByUserId": {
            "type": "string",
            "description": "User ID who uploaded the file"
          },
          "note": {
            "type": "string",
            "description": "Additional notes about the file"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Whether the file is marked as deleted"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "When the file was created"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "When the file was last updated"
          },
          "createdByUserId": {
            "type": "string",
            "description": "User ID who created the record"
          },
          "updatedByUserId": {
            "type": "string",
            "description": "User ID who last updated the record"
          }
        },
        "required": [
          "id",
          "entityType",
          "entityId",
          "fileUrl",
          "isDeleted",
          "createdAt",
          "updatedAt"
        ]
      },
      "UpdateFileAttachmentDto": {
        "type": "object",
        "properties": {
          "entityType": {
            "type": "string"
          },
          "entityId": {
            "type": "string"
          },
          "fileUrl": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "uploadedByUserId": {
            "type": "string"
          },
          "createdByUserId": {
            "type": "string"
          },
          "updatedByUserId": {
            "type": "string"
          }
        }
      },
      "CreateStockTransferDto": {
        "type": "object",
        "properties": {
          "transferCode": {
            "type": "string",
            "description": "Mã chuyển kho"
          },
          "fromStoreId": {
            "type": "string",
            "description": "ID kho nguồn"
          },
          "toStoreId": {
            "type": "string",
            "description": "ID kho đích"
          },
          "transferDate": {
            "type": "string",
            "description": "Ngày chuyển kho"
          },
          "expectedDeliveryDate": {
            "type": "string",
            "description": "Ngày giao hàng dự kiến"
          },
          "notes": {
            "type": "string",
            "description": "Ghi chú"
          },
          "items": {
            "description": "Danh sách sản phẩm",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdByUserId": {
            "type": "string",
            "description": "ID người tạo"
          }
        },
        "required": [
          "transferCode",
          "fromStoreId",
          "toStoreId",
          "transferDate",
          "items"
        ]
      },
      "UpdateStockTransferDto": {
        "type": "object",
        "properties": {
          "transferCode": {
            "type": "string",
            "description": "Mã chuyển kho"
          },
          "fromStoreId": {
            "type": "string",
            "description": "ID kho nguồn"
          },
          "toStoreId": {
            "type": "string",
            "description": "ID kho đích"
          },
          "transferDate": {
            "type": "string",
            "description": "Ngày chuyển kho"
          },
          "expectedDeliveryDate": {
            "type": "string",
            "description": "Ngày giao hàng dự kiến"
          },
          "notes": {
            "type": "string",
            "description": "Ghi chú"
          },
          "items": {
            "description": "Danh sách sản phẩm",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdByUserId": {
            "type": "string",
            "description": "ID người tạo"
          },
          "status": {
            "type": "string",
            "description": "Trạng thái chuyển kho",
            "enum": [
              "pending",
              "in_progress",
              "completed",
              "cancelled"
            ]
          },
          "actualDeliveryDate": {
            "type": "string",
            "description": "Ngày giao hàng thực tế"
          },
          "updatedByUserId": {
            "type": "string",
            "description": "ID người cập nhật"
          },
          "approvedByUserId": {
            "type": "string",
            "description": "ID người phê duyệt"
          }
        }
      },
      "CreateNotificationDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Loại thông báo (ví dụ: \"order\", \"promotion\", v.v.)"
          },
          "title": {
            "type": "string",
            "description": "Tiêu đề thông báo"
          },
          "description": {
            "type": "string",
            "description": "Mô tả chi tiết của thông báo (nếu có)"
          },
          "link": {
            "type": "string",
            "description": "Liên kết liên quan đến thông báo (nếu có)"
          },
          "isRead": {
            "type": "boolean",
            "description": "Đánh dấu đã đọc hay chưa",
            "default": false
          },
          "createdByUserId": {
            "type": "string",
            "description": "ID người tạo thông báo"
          },
          "updatedByUserId": {
            "type": "string",
            "description": "ID người cập nhật gần nhất"
          }
        },
        "required": [
          "type",
          "title",
          "isRead"
        ]
      },
      "UpdateNotificationDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Loại thông báo"
          },
          "title": {
            "type": "string",
            "description": "Tiêu đề thông báo"
          },
          "description": {
            "type": "string",
            "description": "Mô tả chi tiết (nếu có)"
          },
          "link": {
            "type": "string",
            "description": "Đường dẫn liên kết (nếu có)"
          },
          "isRead": {
            "type": "boolean",
            "description": "Trạng thái đã đọc",
            "default": false
          },
          "createdByUserId": {
            "type": "string",
            "description": "ID người tạo thông báo"
          },
          "updatedByUserId": {
            "type": "string",
            "description": "ID người cập nhật gần nhất"
          }
        }
      },
      "CreateTagDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Tên nhãn",
            "example": "VIP"
          },
          "description": {
            "type": "string",
            "description": "Mô tả nhãn",
            "example": "Khách hàng VIP"
          },
          "color": {
            "type": "string",
            "description": "Màu sắc (hex code)",
            "example": "#FF0000"
          },
          "isActive": {
            "type": "boolean",
            "description": "Trạng thái hoạt động",
            "example": true
          },
          "createdByUserId": {
            "type": "string",
            "description": "ID người tạo"
          }
        },
        "required": [
          "name"
        ]
      },
      "UpdateTagDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Tên nhãn",
            "example": "VIP"
          },
          "description": {
            "type": "string",
            "description": "Mô tả nhãn",
            "example": "Khách hàng VIP"
          },
          "color": {
            "type": "string",
            "description": "Màu sắc",
            "example": "#FF0000"
          },
          "isActive": {
            "type": "boolean",
            "description": "Trạng thái hoạt động",
            "example": true
          },
          "createdByUserId": {
            "type": "string",
            "description": "ID người tạo"
          }
        }
      },
      "CreateBankDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Tên ngân hàng"
          },
          "id": {
            "type": "string",
            "description": "ID ngân hàng"
          },
          "createdByUserId": {
            "type": "string",
            "description": "Người tạo"
          }
        },
        "required": [
          "name"
        ]
      },
      "BankResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID ngân hàng"
          },
          "name": {
            "type": "string",
            "description": "Tên ngân hàng"
          },
          "createdAt": {
            "type": "string",
            "description": "Thời gian tạo",
            "format": "date-time"
          },
          "createdByUserId": {
            "type": "string",
            "description": "Người tạo"
          },
          "updatedByUserId": {
            "type": "string",
            "description": "Người cập nhật"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Đã xóa"
          }
        },
        "required": [
          "id",
          "name",
          "createdAt",
          "createdByUserId",
          "isDeleted"
        ]
      },
      "UpdateBankDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Tên ngân hàng"
          },
          "id": {
            "type": "string",
            "description": "ID ngân hàng"
          },
          "createdByUserId": {
            "type": "string",
            "description": "Người tạo"
          }
        }
      },
      "CreateVoucherUsageLogDto": {
        "type": "object",
        "properties": {
          "voucherId": {
            "type": "string",
            "description": "ID voucher"
          },
          "userId": {
            "type": "string",
            "description": "ID người dùng"
          },
          "orderId": {
            "type": "string",
            "description": "ID đơn hàng"
          },
          "discountAmount": {
            "type": "number",
            "description": "Số tiền giảm giá"
          },
          "orderTotalBeforeDiscount": {
            "type": "number",
            "description": "Tổng tiền trước giảm giá"
          },
          "orderTotalAfterDiscount": {
            "type": "number",
            "description": "Tổng tiền sau giảm giá"
          },
          "ipAddress": {
            "type": "string",
            "description": "IP address"
          },
          "userAgent": {
            "type": "string",
            "description": "User agent"
          }
        },
        "required": [
          "voucherId",
          "userId",
          "discountAmount",
          "orderTotalBeforeDiscount",
          "orderTotalAfterDiscount"
        ]
      },
      "UpdateVoucherUsageLogDto": {
        "type": "object",
        "properties": {
          "voucherId": {
            "type": "string",
            "description": "ID voucher"
          },
          "userId": {
            "type": "string",
            "description": "ID người dùng"
          },
          "orderId": {
            "type": "string",
            "description": "ID đơn hàng"
          },
          "discountAmount": {
            "type": "number",
            "description": "Số tiền giảm giá"
          },
          "orderTotalBeforeDiscount": {
            "type": "number",
            "description": "Tổng tiền trước giảm giá"
          },
          "orderTotalAfterDiscount": {
            "type": "number",
            "description": "Tổng tiền sau giảm giá"
          },
          "ipAddress": {
            "type": "string",
            "description": "IP address"
          },
          "userAgent": {
            "type": "string",
            "description": "User agent"
          }
        }
      },
      "CreatePaymentMethodDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Payment method ID"
          },
          "name": {
            "type": "string",
            "description": "Payment method name"
          },
          "createdByUserId": {
            "type": "string",
            "description": "Created by user ID"
          }
        },
        "required": [
          "id",
          "name",
          "createdByUserId"
        ]
      },
      "PaymentMethodResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Payment method ID"
          },
          "name": {
            "type": "string",
            "description": "Payment method name"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Created at"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Updated at"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Deleted at"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Is deleted"
          }
        },
        "required": [
          "id",
          "name",
          "createdAt",
          "updatedAt",
          "isDeleted"
        ]
      },
      "UpdatePaymentMethodDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Payment method ID"
          },
          "name": {
            "type": "string",
            "description": "Payment method name"
          },
          "createdByUserId": {
            "type": "string",
            "description": "Created by user ID"
          }
        }
      },
      "CreateUnitDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Tên đơn vị tính"
          },
          "id": {
            "type": "string",
            "description": "ID đơn vị tính"
          },
          "createdByUserId": {
            "type": "string",
            "description": "Người tạo"
          }
        },
        "required": [
          "name"
        ]
      },
      "UnitResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "isDeleted": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "name",
          "createdAt",
          "updatedAt",
          "isDeleted"
        ]
      },
      "UpdateUnitDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Tên đơn vị tính"
          },
          "id": {
            "type": "string",
            "description": "ID đơn vị tính"
          },
          "createdByUserId": {
            "type": "string",
            "description": "Người tạo"
          }
        }
      },
      "CreateUserStoreMappingDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "ID người dùng"
          },
          "storeId": {
            "type": "string",
            "description": "ID cửa hàng"
          },
          "role": {
            "type": "string",
            "description": "Vai trò"
          },
          "createdByUserId": {
            "type": "string",
            "description": "Người tạo"
          }
        },
        "required": [
          "userId",
          "storeId"
        ]
      },
      "UserStoreMappingResponseDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "ID người dùng"
          },
          "storeId": {
            "type": "string",
            "description": "ID cửa hàng"
          },
          "role": {
            "type": "string",
            "description": "Vai trò"
          },
          "createdAt": {
            "type": "string",
            "description": "Thời gian tạo",
            "format": "date-time"
          },
          "createdByUserId": {
            "type": "string",
            "description": "Người tạo"
          }
        },
        "required": [
          "userId",
          "storeId",
          "createdAt"
        ]
      },
      "UpdateUserStoreMappingDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "ID người dùng"
          },
          "storeId": {
            "type": "string",
            "description": "ID cửa hàng"
          },
          "role": {
            "type": "string",
            "description": "Vai trò"
          },
          "createdByUserId": {
            "type": "string",
            "description": "Người tạo"
          }
        }
      },
      "CreateReturnOrderItemDto": {
        "type": "object",
        "properties": {
          "returnOrderId": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          },
          "quantity": {
            "type": "number"
          },
          "unitPrice": {
            "type": "string"
          },
          "condition": {
            "type": "string"
          }
        },
        "required": [
          "returnOrderId",
          "productId",
          "quantity",
          "unitPrice"
        ]
      },
      "ReturnOrderItemResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "returnOrderId": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          },
          "quantity": {
            "type": "number"
          },
          "unitPrice": {
            "type": "string"
          },
          "condition": {
            "type": "string"
          },
          "restocked": {
            "type": "boolean"
          },
          "note": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "createdByUserId": {
            "type": "string"
          },
          "updatedByUserId": {
            "type": "string"
          },
          "returnOrder": {
            "type": "object"
          },
          "product": {
            "type": "object"
          },
          "createdByUser": {
            "type": "object"
          },
          "updatedByUser": {
            "type": "object"
          }
        },
        "required": [
          "id",
          "returnOrderId",
          "productId",
          "quantity",
          "unitPrice",
          "restocked",
          "createdAt",
          "updatedAt",
          "isDeleted"
        ]
      },
      "UpdateReturnOrderItemDto": {
        "type": "object",
        "properties": {
          "returnOrderId": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          },
          "quantity": {
            "type": "number"
          },
          "unitPrice": {
            "type": "string"
          },
          "condition": {
            "type": "string"
          }
        }
      },
      "ChangeLogLevelDto": {
        "type": "object",
        "properties": {}
      }
    }
  }
}